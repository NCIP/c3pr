package edu.duke.cabig.c3pr.grid.accrualservice.client;

import java.io.InputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.rmi.RemoteException;
import java.util.Date;
import java.util.List;

import javax.xml.namespace.QName;

import org.apache.axis.client.Stub;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;
import org.globus.gsi.GlobusCredential;

import edu.duke.cabig.c3pr.grid.accrualservice.common.AccrualServiceI;
import gov.nih.nci.cabig.ccts.domain.DiseaseSiteAccrualReportType;
import gov.nih.nci.cabig.ccts.domain.SiteAcccrualReportType;
import gov.nih.nci.cagrid.common.Utils;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.2
 */
public class AccrualServiceClient extends AccrualServiceClientBase implements AccrualServiceI {	

	public AccrualServiceClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public AccrualServiceClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public AccrualServiceClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public AccrualServiceClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(AccrualServiceClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  AccrualServiceClient client = new AccrualServiceClient(args[1]);
			  Writer stringWriter = new StringWriter();
			  Date startDate = new Date();
			  Date endDate = new Date();
			  startDate.setYear(10);
			  SiteAcccrualReportType siteReport = client.getSiteAccrualReport(null, null,startDate , endDate);
			  InputStream is = AccrualServiceClient.class.getClassLoader().getResourceAsStream("edu/duke/cabig/c3pr/grid/accrualservice/client/client-config.wsdd");
			  
				Utils.serializeObject( siteReport, new QName("gme://ccts.cabig/1.0/gov.nih.nci.cabig.ccts.domain"), stringWriter,is);
				System.out.println(stringWriter.toString());
				System.out.println("Site report:" + siteReport.getStateCode());
				
				DiseaseSiteAccrualReportType[] diseaseSiteAccrualReportTypes = client.getDiseaseSiteAccrualReports();
				System.out.println("\n" + "size of disease site accruals is :" + diseaseSiteAccrualReportTypes.length );
			} else { 
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMultipleResourceProperties");
    return portType.getMultipleResourceProperties(params);
    }
  }

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getResourceProperty");
    return portType.getResourceProperty(params);
    }
  }

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"queryResourceProperties");
    return portType.queryResourceProperties(params);
    }
  }

  public gov.nih.nci.cabig.ccts.domain.SiteAcccrualReportType getSiteAccrualReport(java.lang.String diseaseSiteName,java.lang.String studyShortTitleText,java.util.Date startDate,java.util.Date endDate) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSiteAccrualReport");
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequest params = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequest();
    params.setDiseaseSiteName(diseaseSiteName);
    params.setStudyShortTitleText(studyShortTitleText);
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequestStartDate startDateContainer = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequestStartDate();
    startDateContainer.setStartDate(startDate);
    params.setStartDate(startDateContainer);
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequestEndDate endDateContainer = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportRequestEndDate();
    endDateContainer.setEndDate(endDate);
    params.setEndDate(endDateContainer);
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteAccrualReportResponse boxedResult = portType.getSiteAccrualReport(params);
    return boxedResult.getSiteAccrualReport();
    }
  }

  public gov.nih.nci.cabig.ccts.domain.DiseaseSiteAccrualReportType[] getDiseaseSiteAccrualReports() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getDiseaseSiteAccrualReports");
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetDiseaseSiteAccrualReportsRequest params = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetDiseaseSiteAccrualReportsRequest();
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetDiseaseSiteAccrualReportsResponse boxedResult = portType.getDiseaseSiteAccrualReports(params);
    return boxedResult.getDiseaseSiteAccrualReport();
    }
  }

  public java.lang.String getSiteCtepId() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getSiteCtepId");
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteCtepIdRequest params = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteCtepIdRequest();
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetSiteCtepIdResponse boxedResult = portType.getSiteCtepId(params);
    return boxedResult.getResponse();
    }
  }

  public gov.nih.nci.cabig.ccts.domain.StudyAccrualReportType[] getStudyAccrualReports() throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getStudyAccrualReports");
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetStudyAccrualReportsRequest params = new edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetStudyAccrualReportsRequest();
    edu.duke.cabig.c3pr.grid.accrualservice.stubs.GetStudyAccrualReportsResponse boxedResult = portType.getStudyAccrualReports(params);
    return boxedResult.getStudyAccrualReport();
    }
  }

}
