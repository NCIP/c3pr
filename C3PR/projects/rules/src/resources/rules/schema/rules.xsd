<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:rules="http://c3pr.cabig.nci.nih.gov/rules/brxml"
		   xmlns:action="http://c3pr.cabig.nci.nih.gov/rules/action"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           elementFormDefault="qualified" 
           targetNamespace="http://c3pr.cabig.nci.nih.gov/rules/brxml"
		   xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
           jaxb:extensionBindingPrefixes="xjc"
           jaxb:version="2.0">

<!--	
    <xs:annotation>
       <xs:appinfo>
          <jaxb:globalBindings generateValueClass="false">
           <xjc:simple />
          </jaxb:globalBindings>
       </xs:appinfo>
    </xs:annotation>
-->
    	
	<xs:element name="category">
		<xs:complexType>
			<xs:sequence>
				<!-- UUID -->
				<xs:element name="id" minOccurs="0" type="xs:string"/>
				<xs:element name="path" type="xs:string"/>
				<xs:element name="metaData" type="rules:metaData" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>				
	</xs:element>
	
	<xs:element name="ruleSet">
		<xs:complexType>
			<xs:sequence>
				<!-- UUID -->
				<xs:element name="id" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="name" type="xs:string"/>
				<xs:element name="description" minOccurs="0" type="xs:string"/>
				<!-- using subject to store level , org and study . spliting and setting to right variables in rulerepositiry service,  -->
				<xs:element name="subject" minOccurs="0" type="xs:string"/>		
				<!-- using coverage to hold  state ...  -->		
				<xs:element name="coverage" minOccurs="0" type="xs:string"/> 
				
				<xs:element name="level" type="xs:string" /> 
				<xs:element name="organization" type="xs:string" /> 
				<xs:element name="study" type="xs:string" />
								
				<!-- 
				<xs:element name="type" type="xs:string" /> ae assesement or report schedule 
				<xs:element name="level" type="xs:string" /> sponsor define, .... etc  
				<xs:element name="organization-name" type="xs:string" /> 
				<xs:element name="organization-role" type="xs:string" /> inst or sponsor 
				<xs:element name="study-name" type="xs:string" /> inst or sponsor
			-->
			
			
				<!-- DEV, PROD, APPROVED Etc.-->
				<xs:element name="status" type="xs:string"/> 
				<xs:element name="import" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="global" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="rules:rule" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="metaData" type="rules:metaData" minOccurs="0" />				
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="rule">
	<xs:complexType>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="rule-attribute" type="rules:rule-attribute"/>        
			<xs:element name="condition" type="rules:condition" minOccurs="0"/>
			<xs:element name="action" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>  
			<xs:element name="readableAction" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>  
			<xs:element name="metaData" type="rules:metaData" minOccurs="0" />
			<xs:element name="readableRule" type="rules:readableRule" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string"/>
		<xs:attribute name="marked-delete" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	</xs:element>
	
	<xs:complexType name="rule-attribute">
	  <xs:attribute name="name" type="xs:string" use="required"/>
	  <xs:attribute name="value" type="xs:string" use="required"/>   
	</xs:complexType>


	<xs:complexType name="condition">
		<xs:sequence>
			<xs:element name="and" type="rules:and" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="or" type="rules:or"  minOccurs="0" maxOccurs="unbounded"/>              
			<xs:element name="not" type="rules:not" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="exists" type="rules:exists" minOccurs="0" maxOccurs="unbounded"/>           
			<xs:element name="eval" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="column" type="rules:column" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>


	<xs:complexType name="and">
		<xs:sequence>
			<xs:element name="and" type="rules:and" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="or" type="rules:or"  minOccurs="0" maxOccurs="unbounded"/>              
			<xs:element name="not" type="rules:not" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="exists" type="rules:exists" minOccurs="0" maxOccurs="unbounded"/>           
			<xs:element name="eval" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="column" type="rules:column" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  

		<xs:complexType name="or">
			<xs:sequence>
			<xs:element name="and" type="rules:and" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="or" type="rules:or"  minOccurs="0" maxOccurs="unbounded"/>              
			<xs:element name="not" type="rules:not" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="exists" type="rules:exists" minOccurs="0" maxOccurs="unbounded"/>           
			<xs:element name="eval" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="column" type="rules:column" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>             
		</xs:complexType>
  
		<xs:complexType name="not">
			<xs:sequence>
				<xs:element name="column" type="rules:column"/>        
			</xs:sequence>       
		</xs:complexType>


		<xs:complexType name="exists">
			<xs:sequence>
				<xs:element name="column" type="rules:column"/>        
			</xs:sequence>       
		</xs:complexType>

   


		<xs:complexType name="column">
			<xs:sequence>
				<xs:element name="field-binding" type="rules:field-binding" maxOccurs="unbounded" minOccurs="0"/>        
				<xs:element name="field-constraint" type="rules:field-constraint" maxOccurs="unbounded" minOccurs="0"/>                      
				<xs:element name="predicate" type="rules:predicate" maxOccurs="unbounded" minOccurs="0"/>                
				<xs:element name="expression" type="xs:string"/>
			</xs:sequence>   
			<xs:attribute name="identifier" type="xs:string" use="optional"/>                
			<xs:attribute name="object-type" type="xs:string" use="required"/> 
			<xs:attribute name="display-uri" type="xs:string" use="required"/>  
			<xs:attribute name="marked-delete" type="xs:boolean" use="optional" default="false"/> 
		</xs:complexType>


		<xs:complexType name="field-constraint">
			<xs:sequence>  
				<!-- commenting out the bellow ref as it is printing an error -->
				<!-- xs:element name="" type="drools:connective-restriction"/ -->
				<xs:element name="literal-restriction" type="rules:literal-restriction" maxOccurs="unbounded" minOccurs="0"/>                      
				<xs:element name="variable-restriction" type="rules:variable-restriction" maxOccurs="unbounded" minOccurs="0"/>               
				<xs:element name="return-value-restriction" type="rules:return-value-restriction" maxOccurs="unbounded" minOccurs="0"/>            
			</xs:sequence>
			<xs:attribute name="field-name" type="xs:string" use="required"/>         
			<xs:attribute name="display-uri" type="xs:string" use="required"/>  
			<xs:attribute name="grammer-prefix" type="xs:string" use="required"/> 
			<xs:attribute name="grammer-postfix" type="xs:string" use="optional"/>            
		</xs:complexType>



		<xs:complexType name="field-binding">
			<xs:attribute name="field-name" type="xs:string" use="required"/>    
			<xs:attribute name="identifier" type="xs:string" use="required"/>      
		</xs:complexType>


		<xs:complexType name="literal-restriction">
			<xs:sequence>
				<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>       
				<xs:element name="readable-value" type="xs:string"/>      
			</xs:sequence>
			<xs:attribute name="evaluator" type="xs:string" use="required"/> 
			<xs:attribute name="display-uri" type="xs:string" use="required"/>         
		</xs:complexType>
<!-- 
		<xs:complexType name="value">
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="display-uri" type="xs:string" use="required" />  
				</xs:extension>
			</xs:simpleContent>          
		</xs:complexType>
-->	
		<xs:complexType name="variable-restriction">
			<xs:attribute name="evaluator" type="xs:string" use="required"/>      
			<xs:attribute name="identifier" type="xs:string" use="required"/>            
		</xs:complexType>


		<xs:complexType name="return-value-restriction">
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="evaluator" type="xs:string" use="required" />  
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>

  
  
		<xs:complexType name="predicate">
			<xs:simpleContent>
				<xs:extension base="xs:string">
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
  
		<xs:complexType name="metaData">
			<xs:sequence>
				<xs:element ref="rules:category" maxOccurs="unbounded" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" />
			<xs:attribute name="description" type="xs:string" />
			<xs:attribute name="title" type="xs:string" />
			<xs:attribute name="state" type="xs:string" /> 
			<xs:attribute name="lastModifiedDate" type="xs:date" /> 
			<xs:attribute name="lastContributor" type="xs:string" />
			<xs:attribute name="versionNumber" type="xs:string" />
			<xs:attribute name="createdDate" type="xs:date" />
			<xs:attribute name="packageName" type="xs:string" />
			<xs:attribute name="format" type="xs:string" />
			<xs:attribute name="type" type="xs:string" />
			<xs:attribute name="creator" type="xs:string" />
			<xs:attribute name="externalSource" type="xs:string" />
			<xs:attribute name="subject" type="xs:string" />      		
			<xs:attribute name="externalRelation" type="xs:string" />
			<xs:attribute name="rights" type="xs:string" />
			<xs:attribute name="coverage" type="xs:string" />
			<xs:attribute name="publisher" type="xs:string" />
			<xs:attribute name="checkinComment" type="xs:string" />
			<xs:attribute name="dateEffective" type="xs:date" />
			<xs:attribute name="dateExpired" type="xs:date" />
			<xs:attribute name="dirty" type="xs:boolean" />    	
		</xs:complexType>    	

		<xs:complexType name="readableRule">
			<xs:sequence>
				<xs:element name="line" type="xs:string" maxOccurs="unbounded" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType> 


	<xs:complexType name="action">
		<xs:attribute name="actionId" type="xs:string" /> 
		<xs:attribute name="name" type="xs:string" />
	</xs:complexType>


	<xs:complexType name="notification">
      <xs:complexContent>
        <xs:extension base="rules:action">
			<xs:sequence>
				<xs:element name="actionHandlerClass" type="xs:string" />
				<xs:element type="xs:string" name="content" />
			</xs:sequence>
        </xs:extension>
      </xs:complexContent>
	</xs:complexType>


	<xs:complexType name="ServiceAction">
		<xs:sequence>
			<xs:element type="xs:string" name="className" />
			<xs:element type="xs:string" name="methodName" />
			<xs:element name="ServiceParam" type="rules:ServiceParam" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

		<xs:complexType name="ServiceParam">
			<xs:sequence>
				<xs:element type="xs:string" name="name" />	
				<xs:element type="xs:string" name="type" />		
			</xs:sequence>
		</xs:complexType>
	
	<xs:complexType name="JmsAction">
		<xs:sequence>
			<xs:element type="xs:string" name="server" />
			<xs:element type="xs:string" name="port" />			
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ServiceMixAction">
		<xs:sequence>
			<xs:element type="xs:string" name="endPoint" />
		</xs:sequence>
	</xs:complexType>  


	<xs:complexType name="InternalAction">
		<xs:sequence>
			
		</xs:sequence>
	</xs:complexType>


	<xs:complexType name="MessageAction">
		<xs:sequence>
			<xs:element type="xs:string" name="protocol" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="AxisAction">
		<xs:sequence>
			<xs:element type="xs:string" name="endPoint" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Assert">
		<xs:sequence>
			
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Retract">
		<xs:sequence>
			
		</xs:sequence>
	</xs:complexType>
	
	


</xs:schema>
