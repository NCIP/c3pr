<?xml version="1.0"?>

<!-- ================================================================= -->
<!-- C3PR master build file                                          -->
<!-- ================================================================= -->
<project name="c3pr-2.0" default="all" basedir="..\">
    <!-- Give user the chance to override properties -->
    <property environment="env"/>
    <!-- import master build properties -->
    <property file="${antfiles.dir}/build.properties"/>

    <property name="ant.home" value="${env.ANT_HOME}"/>

    <!-- layout info -->
    <property name="antfiles.dir" location="${basedir}/antfiles"/>
    <property name="projects.dir" location="${basedir}/projects"/>
    <property name="reports.dir" location="${basedir}/reports"/>
    <property name="share.dir" location="${basedir}/share"/>
    <property name="test.dir" location="${basedir}/test"/>
    <property name="junit.dir" location="${share.dir}/junit-3.8.1"/>
    <property name="junit.results.dir" location="${test.dir}/logs"/>

    <!--ESB deploy directory. Defaults to scratch-->
    <property name="esb.deploy.dir" location="${basedir}/scratch"/>
    <property name="servicemix.project.home" value="${projects.dir}/servicemix"/>


    <!-- import other ant scripts -->
    <import file="${antfiles.dir}/build-artifacts.xml"/>
    <import file="${antfiles.dir}/build-test.xml"/>
    <import file="${antfiles.dir}/build-reports.xml"/>
    <import file="${antfiles.dir}/build-codedrop.xml"/>
    <import file="${antfiles.dir}/build-utilities.xml"/>
    <import file="${antfiles.dir}/build-ant-tasks.xml"/>
    <import file="${antfiles.dir}/build-ctmsi-commons.xml"/>


    <!-- ================================================================================ -->
    <!--                          DEFINE THE SUB PROJECTS                                 -->
    <!-- ================================================================================ -->
    <!-- The name should be the path relative from projects.dir.  Its strongly encouraged you use a flat layout caTissueCAEDataService, caTissueCoreDataService,  -->
    <property name="projects.list"
        value="core, web, grid, esb-client, installer, servicemix, test-system"/>

    <!-- ================================================================================ -->
    <!--                  DEFINE THE SUB PROJECTS THAT SUPPORT TESTING                    -->
    <!-- ================================================================================ -->
    <!-- This should be a subset of the projects above -->
    <property name="testable.projects.list" value="core,grid,web,installer"/>

    <!-- ======================================================================================= -->
    <!--                  DEFINE THE SUB PROJECTS THAT SUPPORT SYSTEM TESTING                    -->
    <!-- ======================================================================================= -->
    <!-- This should be a subset of the projects above -->
    <property name="system.testable.projects.list" value="test-system"/>

    <!-- ================================================================================ -->
    <!--                  DEFINE THE SUB PROJECTS THAT SUPPORT REPORTING                  -->
    <!-- ================================================================================ -->
    <!-- This should be a subset of the projects above -->
    <property name="reportable.projects.list" value="core,web"/>


    <target name="prepare" depends="define-custom-ant-tasks"> </target>

    <!-- =============================================================== -->
    <!-- CORE                                                             -->
    <!-- =============================================================== -->
    <target name="build-core" depends="prepare"
        description="Builds the core project (Services, dao, domain">
        <resolveDependencies extdir="${projects.dir}/core/ext">
            <artifact refid="common.test.jars"/>
            <artifact refid="ctms-commons.jars"/>
            <artifact refid="ant-contrib.jars"/>
            <artifact refid="cacore.jars"/>
            <artifact refid="c3pr.esb-client.jars"/>
            <artifact refid="c3pr.management.jars"/>

            <!-- get third party shared jars -->
            <artifact refid="collections-generic"/>
            <artifact refid="jboss-j2ee.jars"/>
            <artifact refid="bering.jars"/>
            <artifact refid="spring.jars"/>
            <artifact refid="hibernate.jars"/>
            <artifact refid="log4j.jars"/>
            <artifact refid="commons-io.jars"/>
            <artifact refid="commons-logging.jars"/>
            <artifact refid="dom4j.jars"/>
            <artifact refid="antlr.jars"/>
            <artifact refid="net-handle.jars"/>
            <artifact refid="xerces.jars"/>
            <artifact refid="xercesImpl.jars"/>

            <!--security jars-->
            <artifact refid="acegi.jars"/>
            <artifact refid="ehcache.jars"/>

            <!--property files-->
            <artifact refid="c3pr.log4j.properties"/>
            <artifact refid="c3pr.build.properties"/>
        </resolveDependencies>

        <ant dir="${projects.dir}/core" inheritAll="false" antfile="build.xml" target="all"/>
    </target>

    <!-- =============================================================== -->
    <!-- WEB                                                             -->
    <!-- =============================================================== -->
    <target name="build-web" depends="prepare" description="Builds the web project">
        <resolveDependencies extdir="${projects.dir}/web/ext">
            <artifact refid="common.test.jars"/>
            <artifact refid="ctms-commons.jars"/>
            <artifact refid="c3pr.core.jars"/>
            <artifact refid="c3pr.core.lib.jars"/>
            <artifact refid="c3pr.management.jars"/>

            <!-- get third party shared jars -->
            <artifact refid="jboss-j2ee.jars"/>
            <artifact refid="spring.jars"/>
            <artifact refid="hibernate.jars"/>
            <artifact refid="log4j.jars"/>
            <artifact refid="commons-logging.jars"/>
            <artifact refid="commons-logging.jars"/>
            <artifact refid="dom4j.jars"/>
            <artifact refid="antlr.jars"/>
            <artifact refid="net-handle.jars"/>
            <artifact refid="xerces.jars"/>
            <artifact refid="xercesImpl.jars"/>
            <artifact refid="c3pr.build.properties"/>
            <artifact refid="c3pr.core.test.jars"/>

            <artifact refid="jdom.jars"/>
            <artifact refid="dom4j.jars"/>
            <artifact refid="extremeComponents.jars"/>

            <!--property files-->
            <artifact refid="c3pr.log4j.properties"/>
            <artifact refid="c3pr.build.properties"/>
        </resolveDependencies>
        <ant dir="${projects.dir}/web" inheritAll="false" antfile="build.xml" target="all"/>
    </target>

    <!--Does a local build. For Developers use only -->
    <target name="deploy-webapp-local" depends="build-web"
        description="Deploys webapp on your web/web local">
        <ant dir="${projects.dir}/web" inheritall="false" target="deployLocal"/>
    </target>


    <!-- =============================================================== -->
    <!-- c3pr ESB client service                                         -->
    <!-- =============================================================== -->
    <target name="build-esb-client" depends="prepare" description="Builds the esb-client">
        <resolveDependencies extdir="${projects.dir}/esb-client/ext">
            <artifact refid="activemq.jars"/>
            <artifact refid="commons-logging.jars"/>
            <artifact refid="jdom.jars"/>
            <artifact refid="log4j.jars"/>
            <artifact refid="jboss-j2ee.jars"/>
        </resolveDependencies>
        <ant dir="${projects.dir}/esb-client" inheritAll="false" antfile="build.xml" target="all"/>
    </target>


    <!-- =============================================================== -->
    <!-- c3pr Protocol Ingestion Grid Service                            -->
    <!-- =============================================================== -->
    <target name="build-grid" depends="prepare"
        description="Builds the c3p3 Registration Consumer grid node">
        <resolveDependencies extdir="${projects.dir}/grid/ext">
            <artifact refid="ant-contrib.jars"/>
            <artifact refid="c3pr.core.jars"/>
            <artifact refid="c3pr.core.lib.jars"/>
            <artifact refid="c3pr.management.jars"/>

            <!-- get third party shared jars -->
            <artifact refid="jboss-j2ee.jars"/>
            <artifact refid="spring.jars"/>
            <artifact refid="hibernate.jars"/>
            <artifact refid="log4j.jars"/>
            <artifact refid="commons-logging.jars"/>
            <artifact refid="dom4j.jars"/>
            <artifact refid="antlr.jars"/>
            <artifact refid="net-handle.jars"/>
            <artifact refid="xerces.jars"/>
            <artifact refid="xercesImpl.jars"/>
            <artifact refid="c3pr.build.properties"/>

            <artifact refid="c3pr.core.test.jars"/>
            <artifact refid="common.test.jars"/>
        </resolveDependencies>
        <ant dir="${projects.dir}/grid" inheritAll="false" antfile="build.xml" target="all"/>
    </target>

    <!-- =============================================================== -->
    <!-- c3pr Installer  project                                    -->
    <!-- =============================================================== -->
    <target name="build-installer" depends="prepare" description="Builds the installer project">
        <property name="project.archive" value="c3prv2-installpack.zip"/>
        <mkdir dir="${projects.dir}/installer/ext"/>
        <zip destfile="${projects.dir}/installer/ext/${project.archive}">
            <zipfileset dir="${antfiles.dir}" prefix="antfiles"/>
            <zipfileset dir="${projects.dir}/core" prefix="projects/core"/>
            <zipfileset dir="${projects.dir}/web" prefix="projects/web"/>
            <zipfileset dir="${projects.dir}/esb-client" prefix="projects/esb-client"/>
            <zipfileset dir="${share.dir}" prefix="share"/>
        </zip>

        <resolveDependencies extdir="${projects.dir}/installer/ext">
            <artifact refid="common.test.jars"/>
        </resolveDependencies>

        <ant dir="${projects.dir}/installer" inheritAll="false" target="all"/>
    </target>

    <!-- =============================================================== -->
    <!-- c3pr JBI Integration project                                    -->
    <!-- =============================================================== -->
    <target name="build-servicemix" depends="prepare,checkGlobus,checkMaven"
        description="Builds servicemix with c3p3v2 extensions ">
        <resolveDependencies extdir="${projects.dir}/servicemix/ext">
            <artifact refid="ant-contrib.jars"/>
            <artifact refid="cagrid.jars"/>
            <artifact refid="globus.jars"/>
            <artifact refid="c3pr.grid.jars"/>
        </resolveDependencies>
        <ant dir="${projects.dir}/servicemix" inheritAll="false" antfile="build.xml" target="all"/>
    </target>

    <!-- =============================================================== -->
    <!-- TEST-SYSTEM                                                     -->
    <!-- =============================================================== -->
    <target name="build-test-system" depends="prepare" description="Builds the test-system project">
        <resolveDependencies extdir="${projects.dir}/test-system/ext">
            <artifact refid="common.test.jars"/>
            <artifact refid="c3pr.web.jars"/>
            <artifact refid="c3pr.esb-client.jars"/>
        </resolveDependencies>
        <ant dir="${projects.dir}/test-system" inheritAll="false" antfile="build.xml" target="all"/>
    </target>

    <!-- ============================================================== -->
    <!-- Cleans up generated stuff                                      -->
    <!-- ============================================================== -->
    <target name="clean" depends="prepare" description="Cleans all projects.">
        <for list="${projects.list}" parallel="true" param="project.name" trim="true">
            <sequential>
                <echo message="Cleaning project @{project.name}."/>
                <delete dir="${projects.dir}/@{project.name}/ext"/>
                <ant dir="${projects.dir}/@{project.name}" inheritAll="false" antfile="build.xml"
                    target="clean"/>
            </sequential>
        </for>

        <delete failonerror="false">
            <fileset dir="${junit.results.dir}">
                <include name="*"/>
            </fileset>
        </delete>

    </target>

    <target name="createOrUpdateDatabase" description="create or update the Database using bering">
        <ant dir="${projects.dir}/core" inheritall="false" target="bering-migrate"/>
    </target>

    <target name="createOrUpdateDatabaseForTests"
        description="create or update the Database using bering to run tests">
        <ant dir="${projects.dir}/core" inheritall="false" target="bering-migrate-test"/>
    </target>

    <!--Update code from CVS. For developer use only-->
    <target name="cvsUpdate" description="Updates code from CVS. For developers use only">
        <!-- Assumes PKI setup for the following account-->
        <property name="c3prv2.cvs.root"
            value=":ext:kherm@cbiocvs2.nci.nih.gov:/share/content/gforge/c3prv2"/>

        <cvs cvsroot="${c3prv2.cvs.root}" command="update -PAd" cvsrsh="ssh" quiet="false"
            failonerror="true" dest="${basedir}"/>
    </target>


    <target name="run-installer" description="Runs a previously built installer">
        <ant dir="${projects.dir}/installer" target="run-installer"/>
    </target>

    <!-- ============================================================== -->
    <!-- Generate schemas and castor mappings using cacore               -->
    <!-- ============================================================== -->
    <target name="regenerateSchemaAndMappings"
        description="Will regenerate the xml schemas and castor mapping
                                    files. Needs cacore.home set"
        depends="checkcacoreToolkit">

        <property name="c3pr.core.resources.dir" value="${projects.dir}/core/resources"/>
        <property name="c3pr.core.xmi.dir" value="${c3pr.core.resources.dir}/xmi"/>
        <property name="c3pr.core.xsd.dir" value="${c3pr.core.resources.dir}/xsd"/>
        <property name="c3pr.model.filename" value="c3pr.xmi"/>
        <property name="cacore.toolkit.output.dir"
            value="${ext.cacore.toolkit.home}/output/example/src"/>

        <ant dir="${ext.cacore.toolkit.home}" target="clean-all" inheritall="false"/>

        <!--copy our model file over-->
        <copy file="${c3pr.core.xmi.dir}/${c3pr.model.filename}"
            todir="${ext.cacore.toolkit.home}/models" overwrite="true"/>

        <!--generate xml schemas-->
        <ant dir="${ext.cacore.toolkit.home}" target="generate-schemas" inheritall="false">
            <property name="model_filename" value="${c3pr.model.filename}"/>
            <property name="fixed_filename" value="fixed-${c3pr.model.filename}"/>
        </ant>

        <!--Copy the xml schmas over-->
        <copy todir="${c3pr.core.xsd.dir}" overwrite="true">
            <fileset dir="${cacore.toolkit.output.dir}">
                <include name="*.xsd"/>
            </fileset>
        </copy>

        <!--generate castor mapping-->
        <ant dir="${ext.cacore.toolkit.home}" target="generate-xml-mapping" inheritall="false">
            <property name="model_filename" value="${c3pr.model.filename}"/>
            <property name="fixed_filename" value="fixed-${c3pr.model.filename}"/>
        </ant>

        <copy tofile="${c3pr.core.resources.dir}/c3pr-xml-mapping.xml" overwrite="true"
            file="${cacore.toolkit.output.dir}/xml-mapping.xml"> </copy>



    </target>


    <!-- ============================================================== -->
    <!-- Builds the projects                                            -->
    <!-- ============================================================== -->
    <target name="build" depends="prepare" description="Builds all projects.">
        <for list="${projects.list}" parallel="false" param="project.name" trim="true">
            <sequential>
                <echo message="Building project @{project.name}."/>
                <runtarget target="build-@{project.name}"/>
                <echo message="Built project @{project.name}."/>
            </sequential>
        </for>
    </target>

    <target name="tomcat.security" depends="checkTomcat,build-core" description="Configure CSM">
        <ant dir="${projects.dir}/core" inheritall="false" target="tomcat.security">
            <property name="catalina.home" value="${ext.tomcat.dir}"/>
        </ant>
    </target>

    <!-- ====================================================================== -->
    <!-- Deploys the webapp (note:- only web + core projects )in Catalina_home  -->
    <!-- ====================================================================== -->
    <target name="deploy-webapp" depends="checkTomcat,build-web"
        description="Deploy web application to tomcat">
        <ant dir="${projects.dir}/web" inheritAll="false" antfile="build.xml" target="deploy">
            <property name="catalina.home" value="${ext.tomcat.dir}"/>
        </ant>
    </target>

    <!-- ====================================================================== -->
    <!-- UnDeploys the webapp (note:- only web + core projects )in CATALINA_HOME  -->
    <!-- ====================================================================== -->
    <target name="undeploy-webapp" depends="checkTomcat" description="undeploys the c3pr webapp">
        <ant dir="${projects.dir}/web" inheritAll="false" antfile="build.xml" target="undeploy-web">
            <property name="catalina.home" value="${ext.tomcat.dir}"/>
        </ant>
    </target>

    <!-- ====================================================================== -->
    <!-- UnDeploys the webapp (note:- only web + core projects )in CATALINA_HOME  -->
    <!-- ====================================================================== -->
    <target name="war" depends="checkTomcat"
        description="Will build the c3prv2 war archive in the current directory">
        <ant dir="${projects.dir}/web" inheritAll="false" antfile="build.xml" target="war">
            <property name="war.file" value="${antfiles.dir}/c3prv2.war"/>
        </ant>
    </target>


    <target name="deployESB" depends="build-servicemix"
        description="Will build and deploy and make ready the ctms esb engine (servicemix)">

        <property name="servicemix.toolkit.home"
            value="${servicemix.project.home}/servicemix-toolkit"/>

        <!-- call the servicemix project deploy target -->
        <ant dir="${servicemix.project.home}" antfile="build.xml" inheritall="false" target="deploy"/>

        <delete dir="${esb.deploy.dir}"/>

        <copy overwrite="true" todir="${esb.deploy.dir}">
            <fileset dir="${servicemix.toolkit.home}">
                <include name="**"/>
            </fileset>
        </copy>


        <echo message="-----------------------------------------------"/>
        <echo message=""/>

        <echo message="Do the following steps to start servicemix"/>
        <echo message=""/>

        <echo message="cd ${esb.deploy.dir}"/>
        <echo message=""/>

        <echo message="RUN ./${esb.deploy.dir}/bin/servicemix {UNIX}"/>
        <echo message="RUN ./${esb.deploy.dir}/bin/servicemix.bat {WINDOWS}"/>

        <echo message=""/>
        <echo message="-----------------------------------------------"/>
        <echo message=""/>

    </target>
    <!-- ============================================================== -->
    <!-- Builds C3PR  from scratch                                     -->
    <!-- ============================================================== -->
    <target name="all" depends="clean, build" description="Cleans and builds all the projects."/>

</project>
