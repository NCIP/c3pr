<?xml version="1.0" encoding="UTF-8"?>
<project name="c3pr-sauce-labs" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- ==============================================================
		target: test. If no Db property is given, the test target will set db
		as test-postgres
	============================================================== -->
	<condition property="testPattern" value="**/${test}.class" else="**/*Test*.class">
		<isset property="test"/>
	</condition>
	
	<property name="parent.dir" value="${basedir}/.." />
	<property name="antfiles.dir" location="${parent.dir}/../antfiles"/>
	<property file="${antfiles.dir}/build.properties" />
	<property file="${antfiles.dir}/c3pr-ivy.properties" />
	<property name="test.saucelabs.classes.dir" value="${build.dir}/saucelabs-classes-test"/>
	<import file="${antfiles.dir}/common.xml"/>

	<!-- This path will contain the test dependencies and test classes -->
	<path id="test.saucelabs.run.classpath">
		<path refid="test.classpath" />
		<pathelement path="${test.saucelabs.classes.dir}" />
	</path>
	
	<target name="init" unless="no.internal.init" depends="common.init"
		description="This target will contain the intiailziation">
		<echo message="Executing ${ant.project.name} : init" />
		<mkdir dir="${test.saucelabs.classes.dir}" />
		<property name="no.internal.init" value="true" />
	</target>
	
	<target name="clean-saucelabs-classes-test" description="--> clean the saucelabs test classes dir">
		<echo message="Executing in ${ant.project.name}" />
		<delete includeemptydirs="true" dir="${test.saucelabs.classes.dir}" />
	</target>

	<target name="saucelabs-test" if="run.test" depends="clean-classes, clean-classes-test, clean-dist, clean-lib, clean-lib-test, clean-saucelabs-classes-test, init, local-version, jar-test, debug-info" description="Runs the selenium testcases">
		<echo message="Executing in ${ant.project.name}" />
		<echo message="Test results dir: ${test.results.dir}, with pattern ${testPattern} and classes from ${test.saucelabs.classes.dir}" />
		<mkdir dir="${test.results.dir}" />
		<echo message="${SELENIUM_DRIVER}"/>
		<mkdir dir="${test.results.dir}" />
		<taskdef name="selenium-junit-transform" classname="com.semanticbits.saucelabs.SauceLabsJUnitOptimizerTask" classpathref="test.run.classpath"/>
		<selenium-junit-transform srcdir="${test.classes.dir}" srcPackageName="com.example.tests" destdir="${test.saucelabs.classes.dir}"/>
		
		<junit printsummary="yes" errorproperty="test.failed" failureproperty="test.failed"
					showoutput="true" fork="true" forkmode="once" timeout="600000" >
			<sysproperty key="SELENIUM_DRIVER" value="${SELENIUM_DRIVER}"/>
			<sysproperty key="SELENIUM_STARTING_URL" value="${SELENIUM_STARTING_URL}"/>
			<jvmarg value="-XX:MaxPermSize=256m" />
			<jvmarg value="-Xverify:all" />
			<classpath refid="test.saucelabs.run.classpath" />
			
			<formatter type="plain"/>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${test.results.dir}" >
				<fileset dir="${test.saucelabs.classes.dir}">
					<include name="${testPattern}" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<!-- ==============================================================
		target: test-report
	============================================================== -->
	<target name="test-report" if="run.test" depends="saucelabs-test">
		<echo message="Executing in ${ant.project.name}" />
		<mkdir dir="${test.reports.dir}" />
		<junitreport todir="${test.reports.dir}">
			<fileset dir="${test.results.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>
	</target>

</project>
