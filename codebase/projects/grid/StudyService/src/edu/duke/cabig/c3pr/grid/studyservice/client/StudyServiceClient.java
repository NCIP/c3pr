package edu.duke.cabig.c3pr.grid.studyservice.client;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import edu.duke.cabig.c3pr.grid.studyservice.stubs.StudyServicePortType;
import edu.duke.cabig.c3pr.grid.studyservice.stubs.service.StudyServiceAddressingLocator;
import edu.duke.cabig.c3pr.grid.studyservice.common.StudyServiceI;
import gov.nih.nci.cabig.ccts.domain.Message;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.2
 */
public class StudyServiceClient extends StudyServiceClientBase implements StudyServiceI {	

	public StudyServiceClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public StudyServiceClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public StudyServiceClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public StudyServiceClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(StudyServiceClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
	    String credentialFile="/Users/kruttikagarwal/Multisite-Tomcats/smoke-test-cred";
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  StudyServiceClient client = new StudyServiceClient(args[1], new GlobusCredential(new FileInputStream(new File(credentialFile))));
			  Message message=new Message();
			  client.createStudy(message);
			  // place client calls here if you want to use this main as a
			  // test....
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public void createStudy(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"createStudy");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CreateStudyRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CreateStudyRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CreateStudyRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CreateStudyRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CreateStudyResponse boxedResult = portType.createStudy(params);
    }
  }

  public void openStudy(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"openStudy");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.OpenStudyRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.OpenStudyRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.OpenStudyRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.OpenStudyRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.OpenStudyResponse boxedResult = portType.openStudy(params);
    }
  }

  public void approveStudySiteForActivation(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"approveStudySiteForActivation");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ApproveStudySiteForActivationRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.ApproveStudySiteForActivationRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ApproveStudySiteForActivationRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.ApproveStudySiteForActivationRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ApproveStudySiteForActivationResponse boxedResult = portType.approveStudySiteForActivation(params);
    }
  }

  public void activateStudySite(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"activateStudySite");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ActivateStudySiteRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.ActivateStudySiteRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ActivateStudySiteRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.ActivateStudySiteRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.ActivateStudySiteResponse boxedResult = portType.activateStudySite(params);
    }
  }

  public void amendStudy(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"amendStudy");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.AmendStudyRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.AmendStudyRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.AmendStudyRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.AmendStudyRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.AmendStudyResponse boxedResult = portType.amendStudy(params);
    }
  }

  public void updateStudySiteProtocolVersion(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateStudySiteProtocolVersion");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudySiteProtocolVersionRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudySiteProtocolVersionRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudySiteProtocolVersionRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudySiteProtocolVersionRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudySiteProtocolVersionResponse boxedResult = portType.updateStudySiteProtocolVersion(params);
    }
  }

  public void closeStudy(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"closeStudy");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudyRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudyRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudyRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudyRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudyResponse boxedResult = portType.closeStudy(params);
    }
  }

  public void updateStudyStatus(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updateStudyStatus");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudyStatusRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudyStatusRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudyStatusRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudyStatusRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.UpdateStudyStatusResponse boxedResult = portType.updateStudyStatus(params);
    }
  }

  public void closeStudySite(gov.nih.nci.cabig.ccts.domain.Message message) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"closeStudySite");
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudySiteRequest params = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudySiteRequest();
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudySiteRequestMessage messageContainer = new edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudySiteRequestMessage();
    messageContainer.setMessage(message);
    params.setMessage(messageContainer);
    edu.duke.cabig.c3pr.grid.studyservice.stubs.CloseStudySiteResponse boxedResult = portType.closeStudySite(params);
    }
  }

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMultipleResourceProperties");
    return portType.getMultipleResourceProperties(params);
    }
  }

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getResourceProperty");
    return portType.getResourceProperty(params);
    }
  }

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"queryResourceProperties");
    return portType.queryResourceProperties(params);
    }
  }

}
