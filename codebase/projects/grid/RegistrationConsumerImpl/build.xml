<project name="registration-consumer">

    <property environment="env"/>

    <property name="src.dir" value="src/java"/>
    <property name="build.dir" value="build/classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="ext.lib.dir" value="ext/lib"></property>

    <property name="test.src.dir" value="test/${src.dir}"/>
    <property name="test.build.dir" value="test/${build.dir}"/>
    <property name="test.lib.dir" value="test/${lib.dir}"/>
    <property name="test.report.dir" value="test/report"/>
    <property name="jar.name" value="caaers-registration-consumer.jar"/>

    <property name="deploy.lib.dir" value="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/lib"/>


    <target name="checkGlobus" depends="setGlobus">
        <condition property="globus.not.found">
            <or>
                <not>
                    <isset property="ext.globus.dir"/>
                </not>
                <equals arg1="${ext.globus.dir}" arg2=""/>
            </or>
        </condition>
        <fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir"
              if="globus.not.found"/>
        <echo message="Globus: ${ext.globus.dir}"/>
    </target>

    <target name="setGlobus" if="env.GLOBUS_LOCATION">
        <property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}"/>
    </target>

    <target name="defineClasspaths">
        <path id="compile.cp">
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${ext.globus.dir}/lib">
                <include name="*.jar"/>
            </fileset>
        </path>

        <path id="test.compile.cp">
            <pathelement location="test/resources"/>
            <path refid="compile.cp"/>
            <fileset dir="${test.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${ext.globus.dir}/lib">
                <include name="*.jar"/>
            </fileset>
            <pathelement location="${build.dir}"/>

        </path>

        <path id="test.run.cp">
            <path refid="test.compile.cp"/>
            <pathelement location="${test.build.dir}"/>
        </path>
    </target>

    <target name="compile" depends="checkGlobus, get-caaers-jars, defineClasspaths">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true">
            <classpath refid="compile.cp"/>
        </javac>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compileTests" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" debug="true">
            <classpath refid="test.compile.cp"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar basedir="${build.dir}" destfile="${jar.name}"/>
    </target>

    <target name="deploy" depends="jar">
        <copy todir="${deploy.lib.dir}">
            <fileset dir=".">
                <include name="${jar.name}"/>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>


    <target name="test" depends="compileTests">
        <mkdir dir="${test.report.dir}"/>

        <antcall target="insertTestData"/>

        <junit printsummary="yes" showoutput="true">
            <classpath refid="test.run.cp"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.report.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${test.report.dir}">
            <fileset dir="${test.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.report.dir}"/>
        </junitreport>

        <antcall target="deleteTestData"/>

    </target>


   

    <target name="clean">

        <delete dir="build"/>
        <delete file="${jar.name}"/>
        <delete dir="test/build"/>

    </target>

</project>
