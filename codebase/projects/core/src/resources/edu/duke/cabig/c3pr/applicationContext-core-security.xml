<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    ">


    <bean id="authenticationManager"
          class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref bean="${authenticationMode}AuthenticationProvider"/>
                <bean
                        class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
                    <property name="key" value="anonymousAuthKey"/>
                </bean>
            </list>
        </property>

    </bean>
<!-- 
    <aop:aspectj-autoproxy/>
    <aop:spring-configured/>  -->

     <aop:config>
        <!-- pointcuts -->
        <aop:pointcut id="daoMethodPointcut"
            expression="(execution(public * gov.nih.nci.cabig.ctms.dao.AbstractDomainObjectDao+.get*(..)) &amp;&amp; target(edu.duke.cabig.c3pr.dao.StudyDao)) ||
              execution(public void edu.duke.cabig.c3pr.dao.C3PRBaseDao+.save(gov.nih.nci.cabig.ctms.domain.AbstractMutableDomainObject+)) ||
              execution(public void edu.duke.cabig.c3pr.dao.C3PRBaseDao+.merge(gov.nih.nci.cabig.ctms.domain.AbstractMutableDomainObject+))||
              execution(public * edu.duke.cabig.c3pr.dao.C3PRBaseDao+.search*(..))||
              execution(public * edu.duke.cabig.c3pr.dao.C3PRBaseDao+.get*(..)) ||
              execution(public * edu.duke.cabig.c3pr.dao.C3PRBaseDao+.adv*(..))
              
              "/>
         <!---<aop:pointcut id="daoMethodPointcut"
             expression="execution(public void gov.nih.nci.cabig.ctms.dao.MutableDomainObjectDao+.*(..))"/>-->
        <!-- aspects -->
        <aop:aspect id="daoSaveOrUpdateSecurityInterceptorAspect"
                    ref="daoSecurityInterceptorAspectBean">
            <aop:around pointcut-ref="daoMethodPointcut"
                        method="advise"/>


        </aop:aspect>
    </aop:config>


    <bean id="daoSecurityInterceptorAspectBean"
          class="gov.nih.nci.security.acegi.csm.aop.SecurityInterceptorAspect">
        <property name="securityInterceptor"
                  ref="daoSecurityInterceptor"/>
    </bean>

    <bean id="daoSecurityInterceptorTemplate" abstract="true">
        <property name="authenticationManager"
                  ref="authenticationManager"/>
    </bean>

    <util:map id="joinPointObjectPrivilegeMap"
              map-class="java.util.LinkedHashMap">

        <!--study permissions-->
        <!--set to UPDATE because save is called on edit study also-->
        <entry key="execution(* save(edu.duke.cabig.c3pr.domain.Study))"
               value="edu.duke.cabig.c3pr.domain.Study:UPDATE"/>
               
        <entry key="execution(* save(edu.duke.cabig.c3pr.domain.Study))"
               value="edu.duke.cabig.c3pr.domain.Study:CREATE"/>

        <entry key="execution(* merge(edu.duke.cabig.c3pr.domain.Study))"
               value="edu.duke.cabig.c3pr.domain.Study:UPDATE"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudyDao.search*(..))"
               value="edu.duke.cabig.c3pr.domain.Study:READ"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudyDao.get*(..))"
        value="edu.duke.cabig.c3pr.domain.Study:READ"/>
        
        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudySubjectDao.getMostEnrolledStudies(..))"
            value="edu.duke.cabig.c3pr.domain.Study:READ"/>
        
        <entry key="execution(public * gov.nih.nci.cabig.ctms.dao.AbstractDomainObjectDao+.get*(..)) &amp;&amp; target(edu.duke.cabig.c3pr.dao.StudyDao)"
            value="edu.duke.cabig.c3pr.domain.Study:READ"/>

        <!--registration permissions-->
        <entry key="execution(* save(edu.duke.cabig.c3pr.domain.StudySubject))"
               value="edu.duke.cabig.c3pr.domain.StudySubject:CREATE"/>

        <entry key="execution(* merge(edu.duke.cabig.c3pr.domain.StudySubject))"
               value="edu.duke.cabig.c3pr.domain.StudySubject:UPDATE"/>

        <entry key="execution(* reassociate(edu.duke.cabig.c3pr.domain.StudySubject))"
               value="edu.duke.cabig.c3pr.domain.StudySubject:UPDATE"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudySubjectDao.get*(..))"
        value="edu.duke.cabig.c3pr.domain.StudySubject:READ"/>
        
        <entry key="execution(public * gov.nih.nci.cabig.ctms.dao.AbstractDomainObjectDao+.get*(..)) &amp;&amp; target(edu.duke.cabig.c3pr.dao.StudySubjectDao)"
            value="edu.duke.cabig.c3pr.domain.StudySubject:READ"/>
       
       <entry key="execution(* edu.duke.cabig.c3pr.dao.ParticipantDao.get*(..))"
       value="edu.duke.cabig.c3pr.domain.Subject:READ"/>
        
        <!--<entry key="execution(public * gov.nih.nci.cabig.ctms.dao.AbstractDomainObjectDao+.get*(..)) &amp;&amp; target(edu.duke.cabig.c3pr.dao.ParticipantDao)"
            value="edu.duke.cabig.c3pr.domain.Subject:READ"/>-->
               
       <entry key="execution(* edu.duke.cabig.c3pr.dao.ParticipantDao.save*(..))"
               value="edu.duke.cabig.c3pr.domain.Subject:CREATE"/>
               
       <entry key="execution(* edu.duke.cabig.c3pr.dao.ParticipantDao.search*(..))"
               value="edu.duke.cabig.c3pr.domain.Subject:READ"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudySubjectDao.search*(..))"
               value="edu.duke.cabig.c3pr.domain.StudySubject:READ"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudySubjectDao.advancedSearch(..))"
               value="edu.duke.cabig.c3pr.domain.StudySubject:READ"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.StudySubjectDao.advancedStudySearch(..))"
               value="edu.duke.cabig.c3pr.domain.Study:READ"/>
	
        <entry key="execution(* edu.duke.cabig.c3pr.dao.ResearchStaffDao.search*(..))"
               value="edu.duke.cabig.c3pr.domain.ResearchStaff:READ"/>

        <entry key="execution(* edu.duke.cabig.c3pr.dao.ResearchStaffDao.get*(..))"
               value="edu.duke.cabig.c3pr.domain.ResearchStaff:READ"/>
                              
        <entry key="execution(* edu.duke.cabig.c3pr.dao.InvestigatorDao.search*(..))"
               value="edu.duke.cabig.c3pr.domain.Investigator:READ"/>	
	
        <entry key="execution(* edu.duke.cabig.c3pr.dao.InvestigatorDao.get*(..))"
               value="edu.duke.cabig.c3pr.domain.Investigator:READ"/>
               	
		<entry key="execution(* save(edu.duke.cabig.c3pr.domain.passwordpolicy.PasswordPolicy))"
               value="edu.duke.cabig.c3pr.domain.passwordpolicy.PasswordPolicy:UPDATE"/>
               
        <entry key="execution(* save(edu.duke.cabig.c3pr.domain.passwordpolicy.PasswordPolicy))"
               value="edu.duke.cabig.c3pr.domain.passwordpolicy.PasswordPolicy:CREATE"/>
               
        <entry key="execution(* edu.duke.cabig.c3pr.dao.PasswordPolicyDao.*(..))"
               value="edu.duke.cabig.c3pr.domain.passwordpolicy.PasswordPolicy:CREATE"/>

		
		
    </util:map>

    <bean id="joinPointPrivilegeAndObjectIdGenerator"
          class="gov.nih.nci.security.acegi.csm.authorization.JoinPointPrivilegeAndObjectIdGenerator">
        <property name="objectPrivilegeMap"
                  ref="joinPointObjectPrivilegeMap"/>
    </bean>

    <bean id="daoAuthorizationCheck" autowire="byType"
        class="edu.duke.cabig.c3pr.security.authorization.C3PRObjectPrivilegeCheck">
        <property name="authorizationSwitch" ref="authorizationSwitch"/>
        <property name="objectIdGenerator"
                  ref="joinPointPrivilegeAndObjectIdGenerator"/>
        <property name="privilegeGenerator"
                  ref="joinPointPrivilegeAndObjectIdGenerator"/>
    </bean>

    <bean id="daoSecurityInterceptor" parent="daoSecurityInterceptorTemplate"
          class="org.acegisecurity.intercept.method.aspectj.AspectJSecurityInterceptor">
        <property name="objectDefinitionSource">
            <value>
                gov.nih.nci.cabig.ctms.dao.AbstractDomainObjectDao.*=CSM_AUTHN_CHECK,C3PR_AUTH_CHECK
                edu.duke.cabig.c3pr.dao.StudyDao.*=CSM_AUTHN_CHECK,C3PR_AUTH_CHECK
                edu.duke.cabig.c3pr.dao.StudySubjectDao.*=CSM_AUTHN_CHECK,C3PR_AUTH_CHECK
                edu.duke.cabig.c3pr.dao.ParticipantDao.*=CSM_AUTHN_CHECK,C3PR_AUTH_CHECK
				edu.duke.cabig.c3pr.dao.ResearchStaffDao.*=CSM_AUTHN_CHECK
				edu.duke.cabig.c3pr.dao.InvestigatorDao.*=CSM_AUTHN_CHECK
            </value>
        </property>
        <property name="accessDecisionManager">
            <bean class="org.acegisecurity.vote.AffirmativeBased">
                <property name="allowIfAllAbstainDecisions">
                    <value>false</value>
                </property>
                <property name="decisionVoters">
                    <list>
                        <bean
                                class="gov.nih.nci.security.acegi.csm.vote.AuthorizationSwitchVoter">
                            <property name="authorizationSwitch" ref="authorizationSwitch"/>
                            <property name="requiresAuthentication" value="false"/>
                        </bean>
                        <bean
                                class="gov.nih.nci.security.acegi.csm.vote.CSMAuthorizationCheckVoter">
                            <property name="processConfigAttribute"
                                      value="CSM_AUTHN_CHECK"/>
                            <property name="authorizationCheck"
                                      ref="daoAuthorizationCheck"/>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
        <property name="afterInvocationManager">
            <ref bean="afterInvocationManager"/>
        </property>
    </bean>


    <bean id="afterInvocationManager" class="org.acegisecurity.afterinvocation.AfterInvocationProviderManager">
        <property name="providers">
            <list>
                <ref local="c3prBasedSecurityFilter"/>
            </list>
        </property>
    </bean>

    <bean id="studySecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.StudySecurityFilter" />
    
    <bean id="studySubjectSecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.StudySubjectSecurityFilter" />
    
    <bean id="subjectSecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.SubjectSecurityFilter" />

    <bean id="researchStaffSecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.ResearchStaffSecurityFilter" />
    
    <bean id="investigatorSecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.InvestigatorSecurityFilter" />
        
    <util:map id="domainObjectC3PRAuhthorizationCheckProvidersMap"
        	  map-class="java.util.LinkedHashMap">
        
        <entry key="edu.duke.cabig.c3pr.domain.Study"
  		        value-ref="studySecurityFilter"/>
        <entry key="edu.duke.cabig.c3pr.domain.StudySubject"
        		value-ref="studySubjectSecurityFilter"/>
        <entry key="edu.duke.cabig.c3pr.domain.Participant"
            	value-ref="subjectSecurityFilter"/>
        <entry key="edu.duke.cabig.c3pr.domain.ResearchStaff"
            	value-ref="researchStaffSecurityFilter"/>
        <entry key="edu.duke.cabig.c3pr.domain.Investigator"
            	value-ref="investigatorSecurityFilter"/>            	        
    </util:map>

    <bean id="c3prBasedSecurityFilter"
        class="edu.duke.cabig.c3pr.accesscontrol.C3PRBasedAfterInvocationFilteringProvider">
        <property name="authorizationSwitch" ref="authorizationSwitch"/>
        <property name="processConfigAttribute"
            value="C3PR_AUTH_CHECK"/>
        <property name="domainObjectC3PRAuhthorizationCheckProvidersMap"
            ref="domainObjectC3PRAuhthorizationCheckProvidersMap"/>
    </bean>

    <bean id="localAuthenticationProvider"
          class="gov.nih.nci.security.acegi.csm.authentication.CSMAuthenticationProvider">
        <property name="csmAuthenticationManager">
            <bean class="gov.nih.nci.security.SecurityServiceProvider"
                  factory-method="getAuthenticationManager">
                <constructor-arg ref="csmApplicationContextName"/>
            </bean>
        </property>
        <property name="userDetailsService">
            <ref local="csmUserDetailsService"/>
        </property>
        <property name="userCache" ref="userCache"/>
    </bean>

    <bean id="userCache"
          class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
        <property name="cache">
            <bean
                    class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager" ref="cacheManager"/>
                <property name="cacheName" value="userCache"/>

            </bean>
        </property>
    </bean>

    <!--CAS Configuration for WEB-SSO-->
    <bean id="webSSOAuthenticationProvider" class="org.acegisecurity.providers.cas.CasAuthenticationProvider">
        <property name="casAuthoritiesPopulator">
            <ref local="webSSOAuthoritiesPopulator"/>
        </property>
        <property name="casProxyDecider">
            <ref local="casProxyDecider"/>
        </property>
        <property name="ticketValidator">
            <ref local="webSSOProxyTicketValidator"/>
        </property>
        <property name="statelessTicketCache">
            <ref local="statelessTicketCache"/>
        </property>
        <property name="key">
            <value>my_password_for_this_auth_provider_only</value>
        </property>
    </bean>
    
    <bean id="webSSOProxyTicketValidator" class="gov.nih.nci.cabig.caaers.web.security.cas.CaaersCasProxyTicketValidator">
        <property name="casValidate" value="${ccts.websso.base_url}/proxyValidate"/>
        <property name="serviceProperties">
            <ref local="serviceProperties"/>
        </property>
        <property name="trustStore" value="${ccts.websso.cert_file}"/>
    </bean>

    <bean id="webSSOAuthoritiesPopulator" class="edu.duke.cabig.c3pr.accesscontrol.WebSSOAuthoritiesPopulator">
        <property name="hostCertificate" value="${hostCertificate}"></property>
        <property name="hostKey" value="${hostKey}"/>
        <property name="userDetailsService">
            <ref local="csmUserDetailsService"/>
        </property>
        <property name="rolePrivilegeDao" ref="rolePrivilegeDao"/>
    </bean>
    
    <bean id="casProxyDecider" class="org.acegisecurity.providers.cas.proxy.RejectProxyTickets">
    </bean>

	<!--CAS Configuration for non WEB-SSO-->
    <bean id="casAuthenticationProvider" class="org.acegisecurity.providers.cas.CasAuthenticationProvider">
        <property name="casAuthoritiesPopulator">
            <ref local="casAuthoritiesPopulator"/>
        </property>
        <property name="casProxyDecider">
            <bean class="org.acegisecurity.providers.cas.proxy.AcceptAnyCasProxy"/>
        </property>
        <property name="ticketValidator">
            <ref local="casProxyTicketValidator"/>
        </property>
        <property name="statelessTicketCache">
            <ref local="statelessTicketCache"/>
        </property>
        <property name="key">
            <value>my_password_for_this_auth_provider_only</value>
        </property>
    </bean>

    <bean id="casProxyTicketValidator" class="org.acegisecurity.providers.cas.ticketvalidator.CasProxyTicketValidator">
        <property name="casValidate" value="${cas.base_url}/proxyValidate"/>
        <property name="serviceProperties">
            <ref local="serviceProperties"/>
        </property>
        <property name="trustStore" value="${cas.cert_file}"/>
    </bean>
    
    <bean id="casAuthoritiesPopulator"
          class="org.acegisecurity.providers.cas.populator.DaoCasAuthoritiesPopulator">
        <property name="userDetailsService">
            <ref local="csmUserDetailsService"/>
        </property>
    </bean>
    
	<bean id="serviceProperties" class="org.acegisecurity.ui.cas.ServiceProperties">
        <property name="service" value="${c3pr.webapp.url}/j_acegi_cas_security_check"></property>
        <property name="sendRenew">
            <value>false</value>
        </property>
    </bean>

    <bean id="statelessTicketCache" class="org.acegisecurity.providers.cas.cache.EhCacheBasedTicketCache">
        <property name="cache">
            <ref local="ticketCacheBackend"/>
        </property>
    </bean>

    <bean id="ticketCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager">
            <ref local="cacheManager"/>
        </property>
        <property name="cacheName">
            <value>ticketCache</value>
        </property>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

	<bean id="gridSecurityUtils" class="edu.duke.cabig.c3pr.utils.GridSecurityUtils">
		<property name="userDetailsService" ref="csmUserDetailsService"/>
	</bean>

</beans>