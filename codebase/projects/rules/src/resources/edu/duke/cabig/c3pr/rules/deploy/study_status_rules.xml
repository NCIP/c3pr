<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Duke Comprehensive Cancer Center and SemanticBits
   
     Distributed under the OSI-approved BSD 3-Clause License.
     See  https://github.com/NCIP/c3pr/LICENSE.txt for details.
-->
<package name="edu.duke.cabig.c3pr.rules.deploy.study_status_rules"
	xmlns="http://drools.org/drools-4.0" xmlns:drools="http://drools.org/drools-4.0" 
	xmlns:rules="http://drools.org/drools-4.0" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" 
	xs:schemaLocation="http://drools.org/drools-4.0 drools-4.0.xsd">
	
	<global type="edu.duke.cabig.c3pr.rules.runtime.RuleContext" identifier="ruleContext"/>
	<global type="edu.duke.cabig.c3pr.rules.runtime.action.ActionDispatcher" identifier="actionDispatcher"/>
	
	<import name="edu.duke.cabig.c3pr.domain.*"/>
	<import name="edu.duke.cabig.c3pr.service.impl.*"/>
	<import name="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum"/>
	
    <rule name="Study_Rules">
        <lhs>
        	<pattern identifier="plannedNotification" object-type="edu.duke.cabig.c3pr.domain.PlannedNotification"/>
        	<pattern identifier="scheduledNotificationService" object-type="edu.duke.cabig.c3pr.service.ScheduledNotificationService"/>
        	<pattern identifier="study" object-type="edu.duke.cabig.c3pr.domain.Study"/>
        	<pattern identifier="schedulerService" object-type="edu.duke.cabig.c3pr.service.SchedulerService"/>
        	<pattern identifier="event" object-type="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum" />
        	
        	<eval>event.equals(NotificationEventTypeEnum.STUDY_STATUS_CHANGED_EVENT) || event.equals(NotificationEventTypeEnum.NEW_STUDY_SAVED_EVENT)</eval>
        	<!-- <eval>"true" == "true"</eval>  -->
        </lhs>
        <rhs>
        	Integer scheduledNotificationId = scheduledNotificationService.saveScheduledNotification(plannedNotification, study);
            schedulerService.scheduleStudyNotification(plannedNotification, scheduledNotificationId);
        </rhs>        
    </rule>
    
    <rule name="Study_Site_Changed_Rule">
        <lhs>
        	<pattern identifier="plannedNotification" object-type="edu.duke.cabig.c3pr.domain.PlannedNotification"/>
        	<pattern identifier="scheduledNotificationService" object-type="edu.duke.cabig.c3pr.service.ScheduledNotificationService"/>
        	<pattern identifier="studySite" object-type="edu.duke.cabig.c3pr.domain.StudySite"/>
        	<pattern identifier="schedulerService" object-type="edu.duke.cabig.c3pr.service.SchedulerService"/>
        	<pattern identifier="event" object-type="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum" />
        	
        	<eval>event.equals(NotificationEventTypeEnum.STUDY_SITE_STATUS_CHANGED_EVENT)</eval>
        </lhs>
        <rhs>
        	Integer scheduledNotificationId = scheduledNotificationService.saveScheduledNotification(plannedNotification, studySite);
            schedulerService.scheduleStudyNotification(plannedNotification, scheduledNotificationId);
        </rhs>        
    </rule>
	
	 <rule name="Registration_Rules">
        <lhs>
        	<pattern identifier="plannedNotification" object-type="edu.duke.cabig.c3pr.domain.PlannedNotification"/>
        	<pattern identifier="scheduledNotificationService" object-type="edu.duke.cabig.c3pr.service.ScheduledNotificationService"/>
        	<pattern identifier="studySubject" object-type="edu.duke.cabig.c3pr.domain.StudySubject"/>
        	<pattern identifier="schedulerService" object-type="edu.duke.cabig.c3pr.service.SchedulerService"/>
        	<pattern identifier="event" object-type="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum" />
        	
        	<eval>event.equals(NotificationEventTypeEnum.NEW_REGISTRATION_EVENT) || 
	              event.equals(NotificationEventTypeEnum.REGISTATION_STATUS_CHANGE) ||
	              event.equals(NotificationEventTypeEnum.SUBJECT_REMOVED_OFF_STUDY) ||
	              event.equals(NotificationEventTypeEnum.STUDY_SITE_ACCRUAL_EVENT) ||
	              event.equals(NotificationEventTypeEnum.STUDY_ACCRUAL_EVENT)</eval>
        </lhs>
        <rhs>
        	Integer scheduledNotificationId = scheduledNotificationService.saveScheduledNotification(plannedNotification, studySubject);
            schedulerService.scheduleStudyNotification(plannedNotification, scheduledNotificationId);
        </rhs>        
    </rule>
    <rule name="MasterSubject_Rules">
        <lhs>
        	<pattern identifier="plannedNotification" object-type="edu.duke.cabig.c3pr.domain.PlannedNotification"/>
        	<pattern identifier="scheduledNotificationService" object-type="edu.duke.cabig.c3pr.service.ScheduledNotificationService"/>
        	<pattern identifier="participant" object-type="edu.duke.cabig.c3pr.domain.Participant"/>
        	<pattern identifier="schedulerService" object-type="edu.duke.cabig.c3pr.service.SchedulerService"/>
        	<pattern identifier="event" object-type="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum" />
        	
        	<eval>event.equals(NotificationEventTypeEnum.MASTER_SUBJECT_UPDATED_EVENT)</eval>    
         </lhs>
        <rhs>
        	Integer scheduledNotificationId = scheduledNotificationService.saveScheduledNotification(plannedNotification, participant);
            schedulerService.scheduleStudyNotification(plannedNotification, scheduledNotificationId);
        </rhs>        
    </rule>
    <rule name="Correspondence_Rules">
        <lhs>
        	<pattern identifier="plannedNotification" object-type="edu.duke.cabig.c3pr.domain.PlannedNotification"/>
        	<pattern identifier="scheduledNotificationService" object-type="edu.duke.cabig.c3pr.service.ScheduledNotificationService"/>
        	<pattern identifier="correspondence" object-type="edu.duke.cabig.c3pr.domain.Correspondence"/>
        	<pattern identifier="schedulerService" object-type="edu.duke.cabig.c3pr.service.SchedulerService"/>
        	<pattern identifier="event" object-type="edu.duke.cabig.c3pr.constants.NotificationEventTypeEnum" />
        	
        	<eval>event.equals(NotificationEventTypeEnum.CORRESPONDENCE_CREATED_OR_UPDATED_EVENT)</eval>    
         </lhs>
        <rhs>
        	Integer scheduledNotificationId = scheduledNotificationService.saveScheduledNotification(plannedNotification, correspondence);
            schedulerService.scheduleStudyNotification(plannedNotification, scheduledNotificationId);
        </rhs>        
    </rule>
    
</package>	
