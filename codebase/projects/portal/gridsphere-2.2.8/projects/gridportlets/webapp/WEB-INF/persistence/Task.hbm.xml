<?xml version="1.0"?>

<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<hibernate-mapping>
    <subclass name="org.gridlab.gridsphere.services.task.impl.BaseTask"
              extends="org.gridlab.gridsphere.services.resource.impl.BaseResource"
              discriminator-value="Task">

        <!-- User -->
        <property name="UserOid" type="string" column="useroid"/>

        <!-- Delete when task ends flag -->
        <property name="DeleteWhenTaskEndsFlag" type="boolean" column="delOnEnd"/>

        <!-- Task status listeners -->
        <list name="TaskStatusListenerClassNames"
              table="TASK_LISTENERS"
              cascade="all-delete-orphan"
              lazy="true"
              batch-size="10">
            <key column="TASK_OID"/>
            <index type="string" column="LISTENER_INDEX"/>
            <element column="TASK_LISTENER" type="string"/>
        </list>

        <!-- Request spec -->
        <many-to-one name="TaskSpec"
                     class="org.gridlab.gridsphere.services.task.impl.BaseTaskSpec"
                     cascade="all"/>

        <!-- Task status -->
        <property name="TaskStatusName" type="string" column="taskStatus"/>

        <!-- Task status message -->
        <property name="TaskStatusMessage" type="string" column="taskStatusMsg"/>

        <!-- Task attributes -->
        <map name="TaskAttributeMap"
              table="TASK_ATTRIBUTES"
              cascade="all-delete-orphan"
              lazy="true" batch-size="10">
            <key column="TASK_OID"/>
            <index type="string" column="ATTRIBUTE_INDEX"/>
            <element column="TASK_ATTRIBUTE"
                     type="org.gridlab.gridsphere.services.task.impl.TaskAttributeUserType"/>
        </map>

        <!-- Task metrics -->
        <map name="TaskMetricMap"
              table="TASK_METRICS"
              cascade="all-delete-orphan"
              lazy="true" batch-size="10">
            <key column="TASK_OID"/>
            <index type="string" column="METRIC_INDEX"/>
            <element column="TASK_METRIC"
                     type="org.gridlab.gridsphere.services.task.impl.TaskMetricUserType"/>
        </map>

        <!-- Time submitted -->
        <property name="TimeTaskSubmitted" type="long" column="timeSubmitted"/>

        <!-- Date started -->
        <property name="TimeTaskStarted" type="long" column="timeStarted"/>

        <!-- Date status changed -->
        <property name="TimeTaskStatusChanged" type="long" column="timeStatusChanged"/>

        <!-- Date submitted -->
        <property name="TimeTaskEnded" type="long" column="timeEnded"/>

        <!-- Base job -->
        <subclass name="org.gridlab.gridsphere.services.job.impl.BaseJob"
                  discriminator-value="Job">

            <!-- Job id -->
            <property name="JobId" type="string" column="jobId"/>

            <!-- Task status -->
            <property name="JobStatusName" type="string" column="jobStatus"/>

            <!-- Job submission string -->
            <property name="JobSubmissionString" type="text" column="jobString"/>

            <!-- Host name -->
            <property name="HostName" type="string"/>

            <!-- Scheduler name -->
            <property name="SchedulerName" type="string"/>

            <!-- Queue name -->
            <property name="QueueName" type="string"/>

            <!-- User Id -->
            <property name="UserId" type="string"/>

            <!-- Num nodes -->
            <property name="NumNodes" type="int"/>

            <!-- Stdout -->
            <property name="Stdout"
                      column="SOUT_LOC"
                      type="org.gridlab.gridsphere.services.file.impl.FileLocationUserType"/>

            <!-- Stderr -->
            <property name="Stderr"
                      column="SERR_LOC"
                      type="org.gridlab.gridsphere.services.file.impl.FileLocationUserType"/>

            <!-- GRAM job -->
            <subclass name="org.gridlab.gridsphere.services.resources.gram.GramJob"
                      discriminator-value="GramJob"/>

        </subclass>

        <!-- Base job migration -->
        <subclass name="org.gridlab.gridsphere.services.job.impl.BaseJobMigration"
                  discriminator-value="JobMigration">

        </subclass>

        <!-- Base file task -->
        <subclass name="org.gridlab.gridsphere.services.file.impl.BaseFileTask"
                  discriminator-value="FileTask">

            <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileBrowserTask"
                      discriminator-value="FileBrowserTask">

                <!-- Request status -->
                <property name="FileTaskId" type="string" column="fileTaskId"/>

                <!-- Base file listing -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileListing"
                          discriminator-value="FileListing">
                    <!-- File handles -->
                    <list name="FileLocations"
                          table="LIST_LOCS"
                          cascade="all-delete-orphan"
                          lazy="true" batch-size="50">
                        <key column="LIST_ID"/>
                        <index column="LIST_NUM"/>
                        <element column="LIST_LOC"
                                 type="org.gridlab.gridsphere.services.file.impl.FileLocationUserType"
                                 not-null="true"/>
                    </list>

                    <!-- Grid ftp list -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpList"
                              discriminator-value="GridFtpList"/>

                    <!-- Local host list -->
                    <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostList"
                              discriminator-value="LocalHostList"/>

                </subclass>


                <!-- Base file make dir -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileMakeDir"
                          discriminator-value="FileMakeDir">

                    <!-- Grid ftp make dir -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpMakeDir"
                              discriminator-value="GridFtpMakeDir"/>

                    <!-- Local host make dir -->
                      <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostMakeDir"
                                discriminator-value="LocalHostMakeDir"/>

                </subclass>

                <!-- Base file name change -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileNameChange"
                          discriminator-value="FileNameChange">

                    <!-- Grid ftp rename -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpRename"
                              discriminator-value="GridFtpRename"/>

                    <!-- Local host rename -->
                     <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostRename"
                             discriminator-value="LocalHostRename"/>

                </subclass>

                <!-- Base file transfer -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileTransfer"
                          discriminator-value="FileTransfer">

                    <!-- Base file copy -->
                    <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileCopy"
                              discriminator-value="FileCopy">

                        <!-- Grid ftp copy -->
                        <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpCopy"
                                  discriminator-value="GridFtpCopy"/>

                        <!-- Local host copy -->
                        <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostCopy"
                                  discriminator-value="LocalHostCopy"/>

                    </subclass>


                    <!-- Base file move -->
                    <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileMove"
                              discriminator-value="FileMove">

                        <!-- Grid ftp move -->
                        <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpMove"
                                  discriminator-value="GridFtpMove"/>

                        <!-- Local host move -->
                        <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostMove"
                                 discriminator-value="LocalHostMove"/>

                    </subclass>


                </subclass>

                <!-- Base file deletion -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileDeletion"
                          discriminator-value="FileDeletion">

                    <!-- Grid ftp delete -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpDelete"
                              discriminator-value="GridFtpDelete"/>

                    <!-- Local host delete -->
                     <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostDelete"
                             discriminator-value="LocalHostDelete"/>

                </subclass>

                <!-- Base file upload -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileUpload"
                          discriminator-value="org.gridlab.gridsphere.services.file.tasks.FileUpload">

                    <!-- Grid ftp upload -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpUpload"
                              discriminator-value="GridFtpUpload"/>

                    <!-- Local host upload -->
                      <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostUpload"
                                discriminator-value="LocalHostUpload"/>

                </subclass>

                <!-- Base file download -->
                <subclass name="org.gridlab.gridsphere.services.file.tasks.impl.BaseFileDownload"
                          discriminator-value="FileDownload">

                    <!-- Grid ftp download -->
                    <subclass name="org.gridlab.gridsphere.services.resources.gridftp.GridFtpDownload"
                              discriminator-value="GridFtpDownload"/>

                    <!-- Local host download -->
                      <subclass name="org.gridlab.gridsphere.services.resources.system.LocalHostDownload"
                                discriminator-value="LocalHostDownload"/>

                </subclass>

            </subclass>

            <!-- Credential mapping task -->
            <subclass name="org.gridlab.gridsphere.services.security.gss.impl.CredentialMappingTaskImpl"
                      discriminator-value="CredentialMappingTask">

                <!-- Resource attributes -->
                <list name="CredentialMappingTests"
                      table="CM_TESTS"
                      cascade="all-delete-orphan">
                    <key column="CM_TASK_ID"/>
                    <index type="string" column="CM_TASK_INDEX"/>
                    <many-to-many column="CM_TEST"
                        class="org.gridlab.gridsphere.services.security.gss.impl.CredentialMappingTestImpl"/>
                </list>

            </subclass>

        </subclass>

    </subclass>

    <!-- Credential mapping spec -->
    <class name="org.gridlab.gridsphere.services.security.gss.impl.CredentialMappingTestImpl"
           table="CredentialMappingTests"
           discriminator-value="CredentialMappingTest">

        <!-- Object id -->
        <id
            name="oid"
            column="gsoid"
            type="java.lang.String"
            length="32"
            >
            <generator class="uuid.hex"/>
        </id>

        <discriminator column="subclass" type="string"/>

        <!-- Credential Dn -->
        <property name="CredentialDn" type="string" column="CRED_DN"/>

        <!-- Resource Dn -->
        <property name="ResourceDn" type="string" column="RESOURCE_DN"/>

        <!-- Error Code -->
        <property name="ErrorCode" type="int" column="ERROR_CODE"/>

        <!-- Error Message -->
        <property name="ErrorMessage" type="string" column="ERROR_MESSAGE"/>

    </class>

</hibernate-mapping>
