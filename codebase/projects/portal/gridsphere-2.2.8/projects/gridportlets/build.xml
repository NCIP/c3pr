<!-- =======================================================================

   Build file for Grid Portlets

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org

Build Instructions:
   To build, invoke "ant"

Copyright:
  2002,2003,2004

- $Id: build.xml,v 1.1.1.1 2007-02-01 20:15:05 kherm Exp $

============================================================================ -->

<project name="gridportlets" default="help" basedir=".">

    <!-- Environment properties -->
    <property environment="env"/>

    <!-- Configurable properties -->
    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${gridsphere.home}/lib/ant-contrib-0.3.jar"/>
        </classpath>
    </taskdef>

    <!-- Project properties -->
    <property name="version"         value="1.3.2" />
    <property name="release"         value="" />
    <property name="version.release" value="${version} ${release}"/>
    <property name="project"     value="${project.title} ${version.release}"/>
    <property name="project.api" value="${project.title} API ${version.release}" />

    <!-- Build path properties -->
    <property name="build.home"    value="${project.build}/home"/>
    <property name="build.classes" value="${project.build}/classes"/>
    <property name="build.lib"     value="${project.build}/lib"/>
    <property name="build.webapp" value="${project.build}/webapp"/>
    <property name="build.tests"   value="${project.build}/tests"/>

    <!-- Documentation Targets -->
    <import file="config/build/docs.xml"/>
    <!-- Distribution Targets -->
    <import file="config/build/dist.xml"/>
    <!-- New Project Targets -->
    <import file="config/build/newproject.xml"/>
    <!-- OGSA Targets -->
    <import file="config/build/globus.xml"/>

    <!-- =================================================================== -->
    <!-- Sets the CLASSPATH                                                  -->
    <!-- =================================================================== -->
    <path id="classpath">

        <!-- JDK Classes -->
        <pathelement path="${java.class.path}"/>

        <!-- Catalina common jars -->
        <fileset dir="${env.CATALINA_HOME}/common/lib">
            <include name="*.jar"/>
            <exclude name="${project.name}-*.jar"/>
        </fileset>

        <!-- Catalina endorsed jars -->
        <fileset dir="${env.CATALINA_HOME}/common/endorsed">
            <include name="*.jar"/>
            <exclude name="${project.name}-*.jar"/>
        </fileset>

        <!-- Catalina server jars -->
        <fileset dir="${env.CATALINA_HOME}/server/lib">
            <include name="catalina.jar"/>
        </fileset>

        <!-- Catalina shared jars -->
        <fileset dir="${env.CATALINA_HOME}/shared/lib">
            <include name="*.jar"/>
            <exclude name="${project.name}-*.jar"/>
	        <exclude name="gridsphere*.jar"/>
        </fileset>

        <!-- GridSphere jars -->
        <fileset dir="${gridsphere.build}/lib">
            <include name="*.jar"/>
        </fileset>

        <!-- Globus jars -->
        <fileset dir="${globus.classpath}">
            <include name="*.jar"/>
        </fileset>

        <!-- Grid Portlets classes -->
        <pathelement location="${build.classes}"/>

    </path>

    <!-- =================================================================== -->
    <!-- Print usage information                                             -->
    <!-- =================================================================== -->
    <target name="help" description="Displays help about useful ant targets for Grid Portlets">
        <echo message="--------------------------------------------------------------------"/>
        <echo message="- Installation Targets                                             -"/>
        <echo message="--------------------------------------------------------------------"/>
        <echo message="Target                 Description"/>
        <echo message="install                Installs the Grid Portlets web application"/>
        <echo message="update                 Updates the Grid Portlets web application"/>
        <echo message="uninstall              Uninstalls the Grid Portlets web application"/>
        <echo message="--------------------------------------------------------------------"/>
        <echo message="- Additional Targets                                               -"/>
        <echo message="--------------------------------------------------------------------"/>
        <echo message="Target                 Description"/>
        <echo message="clean                  Removes the Grid Portlets build directopry"/>
        <echo message="setenv                 Displays Grid Portlets build configuration"/>
        <echo message="compile                Compiles the Grid Portlets source files"/>
        <echo message="jar                    Jars the Grid Portlets class files"/>
        <echo message="deploy                 Deploys the Grid Portlets web application"/>
        <echo message="create-database        Creates the Grid Portlets database"/>
        <echo message="update-database        Updates the Grid Portlets database"/>
        <echo message="docs                   Installs Grid Portlets documentation"/>
    </target>

    <!-- =================================================================== -->
    <!-- Installs Grid Portlets                                              -->
    <!-- =================================================================== -->
    <target name="install" description="Installs the Grid Portlets web application">

        <!-- Check that build properties exists
        <condition property="build.properties.create">
            <not>
                <available file="build.properties"/>
            </not>
        </condition>
        <antcall target="create-properties"/>
        -->

        <!-- Continue install if build.properties existed already
        <condition property="install.continue">
            <isfalse value="${build.properties.create}"/>
        </condition>
        <antcall target="install-continue"/>
         -->

        <antcall target="license"/>

        <echo>------------------------------------------------------------</echo>
        <echo>-- Installing Grid Portlets documentation is recommended  --</echo>
        <echo>------------------------------------------------------------</echo>
        <echo>Answering 'y' below will deploy Grid Portlets documentation </echo>
        <echo>and make it available on GridSphere's main page. If you     </echo>
        <echo>answer 'n' you can deploy the documentation at a later time </echo>
        <echo>with 'ant deploy-docs'.                                     </echo>
        <echo>------------------------------------------------------------</echo>
        <input message="Do you want to install Grid Portlets documentation? "
               validargs="y,n" defaultvalue="y" addProperty="install.docs.agreed"/>
        <condition property="install.docs">
            <equals arg1="y" arg2="${install.docs.agreed}"/>
        </condition>

        <antcall target="clean"/>
        <antcall target="setenv"/>
        <antcall target="deploy"/>
        <antcall target="configure-database"/>
        <antcall target="create-database"/>
        <antcall target="answer-docs"/>

    </target>

    <!-- =================================================================== -->
    <!-- Continues installation of documenation                              -->
    <!-- =================================================================== -->
    <target name="answer-docs" if="install.docs">
        <antcall target="docs"/>
    </target>

    <!-- =================================================================== -->
    <!-- Create build properties file                                        -->
    <!-- =================================================================== -->
    <target name="create-properties" if="build.properties.create"
            description="Creates build.properties from build.properties.template">

        <copy file="build.properties.template"
            tofile="build.properties"/>

        <echo>---------------------------------------------------</echo>
        <echo>A build.properties file has been created for you.  </echo>
        <echo>You can edit this file to specify custom build     </echo>
        <echo>options or leave it as it is. When you are ready   </echo>
        <echo>to continue the installation of Grid Portlets, just</echo>
        <echo>rerun "ant install".                               </echo>
        <echo>---------------------------------------------------</echo>

    </target>

    <!-- =================================================================== -->
    <!-- Updates Grid Portlets                                               -->
    <!-- =================================================================== -->
    <target name="update" description="Updates the Grid Portlets web application">

        <antcall target="license"/>

        <echo>------------------------------------------------------------</echo>
        <echo>-- Updating Grid Portlets documentation is recommended    --</echo>
        <echo>------------------------------------------------------------</echo>
        <echo>Answering 'y' below will deploy Grid Portlets documentation </echo>
        <echo>and make it available on GridSphere's main page. If you     </echo>
        <echo>answer 'n' you can deploy the documentation at a later time </echo>
        <echo>with 'ant deploy-docs'.                                     </echo>
        <echo>------------------------------------------------------------</echo>
        <input message="Do you want to install/update Grid Portlets documentation? "
               validargs="y,n" defaultvalue="y" addProperty="install.docs.agreed"/>
        <condition property="install.docs">
            <equals arg1="y" arg2="${install.docs.agreed}"/>
        </condition>

        <antcall target="clean"/>
        <antcall target="setenv"/>
        <antcall target="deploy"/>
        <antcall target="configure-database"/>
        <antcall target="update-database"/>
        <antcall target="answer-docs"/>

    </target>

    <!-- =================================================================== -->
    <!-- Prints GridSphere license agreement                                 -->
    <!-- =================================================================== -->
    <target name="license" description="Prints GridSphere license">
        <loadfile property="license" srcFile="LICENSE.txt"/>
        <echo message="${license}"/>
        <input message="Do you agree to these terms? " validargs="y,n" addProperty="agreed"/>
        <condition property="do.abort">
            <equals arg1="n" arg2="${agreed}"/>
        </condition>
        <fail if="do.abort">Grid Portlets will not be installed</fail>
    </target>

    <!-- =================================================================== -->
    <!-- Cleans everything                                                   -->
    <!-- =================================================================== -->
    <target name="clean" description="Delete compiled classes and libraries">
        <delete quiet="true" dir="${project.build}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Setup Environment                                                   -->
    <!-- =================================================================== -->
    <target name="setenv"
            description="Check for libraries and print out config information">

        <!-- Needed to import ant-contrib tasks -->
        <taskdef resource="cactus.tasks">
                <classpath>
                    <pathelement location="${gridsphere.home}/lib/cactus-integration-ant-20030401.jar"/>
                </classpath>
        </taskdef>

        <!-- Check if catalina home exists -->
        <available file="${env.CATALINA_HOME}/bin/bootstrap.jar" property="catalina.exists"/>
        <fail message="Unable to find Tomcat 4.1.+. Make sure you have set $CATALINA_HOME"
              unless="catalina.exists"/>

        <echo message="-------------------------------------------------------" />
        <echo message=" Build environment for ${project} " />
        <echo message="-------------------------------------------------------" />
        <echo message=""/>
        <echo message="--- Property values ---" />
        <echo message="debug=${debug}" />
        <echo message="deprecation=${deprecation}" />
        <echo message="optimize=${optimize}" />
        <echo message=""/>
        <echo message="--- Environment variables ---" />
        <echo message="ANT_HOME is set to ${env.ANT_HOME}"/>
        <echo message="JAVA_HOME is set to ${env.JAVA_HOME}"/>
        <echo message="CATALINA_HOME is set to ${env.CATALINA_HOME}"/>

    </target>

    <!-- =================================================================== -->
    <!-- Splashes GridSphere's Logo                                          -->
    <!-- =================================================================== -->
    <target name="splash" description="Displays the GridSphere logo">

        <!-- Check that the OGSA version is set -->
        <condition property="project.splash.display.proceed">
            <istrue value="${project.splash.display}"/>
        </condition>
        <antcall target="splash-proceed"/>
    </target>

    <target name="splash-proceed" if="project.splash.display.proceed">

        <property name="splash.dir" location="."/>
        <splash imageurl="file:webapp/images/gridsphere_logo.png"
                showduration="0"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles Grid Portlets source code                                  -->
    <!-- =================================================================== -->
    <target name="compile" depends="build-dir" description="Compile Grid Portlets source code">
        <!-- Compfile source files -->
        <javac  srcdir="src"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="false">
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Grid Portlets build directory                           -->
    <!-- =================================================================== -->
    <target name="build-dir" description="Creates the Grid Portlets build directory">
        <!-- Make build directories -->
        <mkdir dir="${project.build}"/>
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.webapp}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Grid Portlets war file                                  -->
    <!-- =================================================================== -->
    <target name="war" depends="jar" description="Create Grid Portlets WAR">
        <echo>Creating gridportlets web application WAR</echo>
        <war warfile="${project.build}/${project.name}.war" update="true"
             webxml="${webapp.dir}/WEB-INF/web.xml">
            <fileset dir="${gswebapp.dir}">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- ============================================================================ -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat            -->
    <!-- ============================================================================ -->
    <target name="jar" depends="compile" description="Creates gridportlets JAR">
        <mkdir dir="${build.classes}/${project.name}"/>
        <copy overwrite="true" todir="${build.classes}">
            <fileset dir="webapp/WEB-INF/classes">
                <include name="log4j.properties"/>
            </fileset>
        </copy>
        <copy overwrite="true" todir="${build.classes}/${project.name}">
            <fileset dir="webapp/WEB-INF/classes">
                <include name="Portlet*.properties"/>
            </fileset>
        </copy>
        <antcall target="provider-jar"/>
        <antcall target="portlets-jar"/>
        <antcall target="services-jar"/>
        <antcall target="servlets-jar"/>
    </target>

    <!-- ============================================================================ -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat            -->
    <!-- ============================================================================ -->
    <target name="provider-jar" description="Creates gridportlets portlets JAR">
        <jar jarfile="${build.lib}/${project.name}-provider.jar" basedir="${build.classes}" >
            <include name="**/portlets/ActionComponentPortlet.class"/>
            <include name="${project.name}/**" />
        </jar>
    </target>

    <!-- ============================================================================ -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat            -->
    <!-- ============================================================================ -->
    <target name="portlets-jar" description="Creates gridportlets portlets JAR">
        <echo>Creating gridportlets-portlets.jar for Tomcat</echo>
        <jar jarfile="${build.lib}/${project.name}-portlets.jar" basedir="${build.classes}" >
            <include name="**/portlets/**" />
            <exclude name="**/portlets/ActionComponenPortlet.class"/>
            <include name="${project.name}/**" />
        </jar>
    </target>

    <!-- ============================================================================ -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat            -->
    <!-- ============================================================================ -->
    <target name="services-jar" description="Creates gridportlets services JAR">
        <echo>Creating gridportlets-services.jar for Tomcat</echo>
        <jar jarfile="${build.lib}/${project.name}-services.jar" basedir="${build.classes}" >
            <include name="**/services/**"/>
            <include name="${project.name}/**" />
            <include name="log4j.properties"/>
        </jar>
    </target>

    <!-- ============================================================================ -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat            -->
    <!-- ============================================================================ -->
    <target name="servlets-jar" description="Creates gridportlets servlets JAR">
        <echo>Creating gridportlets-services.jar for Tomcat</echo>
        <jar jarfile="${build.lib}/${project.name}-servlets.jar" basedir="${build.classes}" >
            <include name="**/servlets/**"/>
            <include name="${project.name}/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Deploys Grid Portlets to a local server                             -->
    <!-- =================================================================== -->
    <target name="deploy" depends="jar" description="Deploys Grid Portlets to a local server">

        <echo>Deploying Grid Portlets to Tomcat</echo>

        <!-- Delete old jars -->
        <antcall target="undeploy-jars"/>

        <!-- Deploy web application files -->
        <antcall target="deploy-webapp"/>

        <!-- Deploy new jars -->
        <antcall target="deploy-jars"/>

        <!-- Install globus -->
        <antcall target="install-globus"/>

    </target>

    <!-- =================================================================== -->
    <!-- Deploys Grid Portlets web application to a local server             -->
    <!-- =================================================================== -->
    <target name="deploy-webapp" description="Deploys Grid Portlets web application to a local server">

        <echo>Deploying ${project.name} web application to Tomcat</echo>

        <!-- Copy the web application directory -->
        <copy todir="${project.webapp}">
            <fileset dir="webapp"/>
        </copy>

        <!-- Install globus -->
        <antcall target="deploy-language-default"/>
        <antcall target="deploy-language-english"/>

        <!-- Deploy web-inf files -->
        <copy overwrite="true" todir="${project.webapp}/WEB-INF">
            <fileset dir="webapp/WEB-INF/">
                <include name="*.xml"/>
             </fileset>
        </copy>

        <!-- Deploy general mapping files -->
        <copy overwrite="true" todir="${project.webapp}/WEB-INF/mapping">
            <fileset dir="webapp/WEB-INF/mapping">
                <include name="*.xml"/>
             </fileset>
        </copy>

        <!-- Deploy resource mapping files -->
        <copy overwrite="true" todir="${project.webapp}/WEB-INF/mapping/resources">
            <fileset dir="webapp/WEB-INF/mapping/resources">
                <include name="*.xml"/>
             </fileset>
        </copy>

        <!-- Deploy persistence files -->
        <copy overwrite="true" todir="${project.webapp}/WEB-INF/persistence">
            <fileset dir="webapp/WEB-INF/persistence">
                <include name="*.xml"/>
             </fileset>
        </copy>

        <!-- Touch "gridortlets" file (delete previous touched "gridportlets" for old versions of gridportlets) -->
        <delete failonerror="false" file="${gridsphere.webapp}/WEB-INF/CustomPortal/portlets/${project.name}"/>
        <touch file="${gridsphere.webapp}/WEB-INF/CustomPortal/portlets/${project.name}.2"/>

        <!-- Copy gridportlets logo -->
        <copy overwrite="true" todir="${gridsphere.webapp}/images/">
            <fileset dir="webapp/images">
                <include name="gridsphere_logo.gif"/>
                <include name="gridsphere_logo.png"/>
            </fileset>
        </copy>

    </target>

    <!-- =================================================================== -->
    <!-- Deploys Grid Portlets web application to a local server             -->
    <!-- =================================================================== -->
    <target name="deploy-language-default" description="Deploys the locale specified in language.default as the default language" if="language.default">
        <echo message="Deploying Portlet_${language.default}.properties as default"/>
        <copy overwrite="true"
              file="webapp/WEB-INF/classes/Portlet_${language.default}.properties"
              tofile="${project.webapp}/WEB-INF/classes/Portlet.properties"/>


    </target>

    <!-- =================================================================== -->
    <!-- Deploys Grid Portlets web application to a local server             -->
    <!-- =================================================================== -->
    <target name="deploy-language-english" description="Deploys Portlet_en.properties as the default language" unless="language.default">
        <echo message="Deploying Portlet_en.properties as default"/>
        <copy overwrite="true"
              file="webapp/WEB-INF/classes/Portlet_en.properties"
              tofile="${project.webapp}/WEB-INF/classes/Portlet.properties"/>

    </target>

    <!-- =================================================================== -->
    <!-- Deploys Grid Portlets web application to a local server             -->
    <!-- =================================================================== -->
    <target name="deploy-jars" description="Deploys Grid Portlets web application to a local server">

        <echo>Deploying ${project.name} web application to Tomcat</echo>

        <!-- Copy the gridsphere ui tags to web application -->
	<copy todir="${project.webapp}/WEB-INF/lib">
           <fileset dir="${gridsphere.build}/lib/">
               <include name="gridsphere-ui-tags*.jar"/>
           </fileset>
       </copy>

        <!-- Copy the gridportlets jars to web application-->
        <copy overwrite="true" todir="${project.webapp}/WEB-INF/lib">
            <fileset dir="${build.lib}">
                <include name="${project.name}-provider.jar"/>
                <include name="${project.name}-portlets.jar"/>
                <include name="${project.name}-servlets.jar"/>
            </fileset>
        </copy>

        <!-- Copy gridportlet-services.jar to shared lib -->
        <copy overwrite="true" todir="${env.CATALINA_HOME}/shared/lib">
            <fileset dir="${build.lib}">
                <include name="${project.name}-services.jar"/>
                <include name="${project.name}-test.jar"/>
            </fileset>
        </copy>

    </target>

    <!-- =================================================================== -->
    <!-- Configures the Grid Portlets database                               -->
    <!-- =================================================================== -->
    <target name="configure-database">
        <mkdir dir="${project.webapp}/WEB-INF/persistence/"/>
        <copy overwrite="true" file="webapp/WEB-INF/persistence/hibernate.properties"
              todir="${project.webapp}/WEB-INF/persistence/"/>
        <pathconvert targetos="windows" dirsep="/" property="cathome">
            <path location="${env.CATALINA_HOME}"/>
        </pathconvert>
        <replace file="${project.webapp}/WEB-INF/persistence/hibernate.properties"
            token="@GRIDPORTLETS_WEBAPP@"
            value="${cathome}/webapps/gridportlets"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Grid Portlets database                                  -->
    <!-- =================================================================== -->
    <target name="create-database">
        <taskdef name="dbtask"
            classname="org.gridlab.gridsphere.core.persistence.hibernate.DBTask"
            classpathref="classpath"/>
        <dbtask
            configdir="${project.webapp}"
            action="CREATE"/>
    </target>

    <!-- =================================================================== -->
    <!-- Updates the Grid Portlets database                                  -->
    <!-- =================================================================== -->
    <target name="update-database">
        <taskdef name="dbtask"
            classname="org.gridlab.gridsphere.core.persistence.hibernate.DBTask"
            classpathref="classpath"/>
        <dbtask
            configdir="${project.webapp}"
            action="UPDATE"/>
    </target>

    <!-- =================================================================== -->
    <!-- Uninstalls Grid Portlets                                            -->
    <!-- =================================================================== -->
    <target name="uninstall"
            description="Uninstalls the Grid Portlets web application and related files">

        <echo>------------------------------------------------------------</echo>
        <echo>-- WARNING: Uninstalling Grid Portlets                    --</echo>
        <echo>------------------------------------------------------------</echo>
        <echo>Answering 'y' below will delete the Grid Portlets web       </echo>
        <echo>application that has been installed in:                     </echo>
        <echo>  ${project.webapp}                                         </echo>
        <echo>as well as any jars have been deployed to $CATALINA_HOME.   </echo>
        <echo>This action cannot be undone.                               </echo>
        <echo>------------------------------------------------------------</echo>
        <input message="Are you sure you want to uninstall Grid Portlets? "
               validargs="y,n" addProperty="agreed"/>
        <condition property="do.abort">
            <equals arg1="n" arg2="${agreed}"/>
        </condition>
        <fail if="do.abort">Grid Portlets will not be uninstalled</fail>

        <!-- Setenv -->
        <antcall target="setenv"/>

        <!-- Undeploy docs -->
        <antcall target="docs-uninstall"/>

        <!-- Undeploy web application -->
        <antcall target="undeploy-webapp"/>

        <!-- Undeploy jars -->
        <antcall target="undeploy-jars"/>

        <!-- Undeploy ogsa -->
        <antcall target="uninstall-globus"/>

    </target>

    <!-- =================================================================== -->
    <!-- Undeploys the Grid Portlets web application                         -->
    <!-- =================================================================== -->
    <target name="undeploy-webapp"
            description="Undeploys the Grid Portlets web application">

        <echo message="Deleting Grid Portlets web application"/>
        <!-- Delete project name file in gridsphere-->
        <delete failonerror="false">
            <fileset dir="${gridsphere.webapp}/WEB-INF/CustomPortal/portlets" includes="${project.name}*"/>
        </delete>
        <!-- Delete web application directory -->
        <delete failonerror="false" includeEmptyDirs="true">
          <fileset dir="${env.CATALINA_HOME}/webapps/${project.name}"
                   includes="**/*"/>
        </delete>
        <delete failonerror="false" dir="${env.CATALINA_HOME}/webapps/${project.name}"/>

    </target>

    <!-- =================================================================== -->
    <!-- Undeploys the Grid Portlets jars                                    -->
    <!-- =================================================================== -->
    <target name="undeploy-jars"
            description="Undeploys the Grid Portlets jars">

        <!-- Delete webapp jars -->
        <echo message="Deleting Grid Portlets webapp jars"/>
        <delete failonerror="false" >
            <fileset dir="${project.webapp}/WEB-INF/lib">
                <include name="*.jar"/>
            </fileset>
        </delete>

        <!-- Delete common libs -->
        <echo message="Deleting Grid Portlets common/lib jars"/>
        <delete failonerror="false" >
            <fileset dir="${env.CATALINA_HOME}/common/lib">
                <include name="${project.name}-*.jar"/>
            </fileset>
        </delete>

        <!-- Delete endorsed libs -->
        <echo message="Deleting Grid Portlets common/endorsed jars"/>
        <delete failonerror="false" >
            <fileset dir="${env.CATALINA_HOME}/common/endorsed">
                <include name="${project.name}-*.jar"/>
            </fileset>
        </delete>

        <!-- Delete shared libs -->
        <echo message="Deleting Grid Portlets shared/lib jars"/>
        <delete failonerror="false" >
            <fileset dir="${env.CATALINA_HOME}/shared/lib">
                <include name="${project.name}-*.jar"/>
            </fileset>
        </delete>


        <!-- Delete webapp jars -->
        <echo message="Deleting Grid Portlets webapp jars"/>
        <delete failonerror="false" >
            <fileset dir="${env.CATALINA_HOME}/server/lib">
                <include name="${project.name}-*.jar"/>
                <exclude name="${project.name}-anonymous-gsi.jar"/>
            </fileset>
        </delete>

    </target>

    <!-- =================================================================== -->
    <!-- Run Tomcat tests                                                    -->
    <!-- =================================================================== -->

    <target name="run-tests" depends="tests-jar" if="catalina.exists" description="Run Junit tests in running Tomcat container">

        <antcall target="create-test-database"/>

        <antcall target="deploy"/>

        <!-- Start the servlet engine, wait for it to be started, run the
        unit tests, stop the servlet engine, wait for it to be stopped.
        The servlet engine is stopped if the tests fail for any reason -->

        <runservertests
            testURL="http://127.0.0.1:${8080}/gridportlets/ServletRedirector?Cactus_Service=RUN_TEST"
            startTarget="start-tomcat"
            stopTarget="stop-tomcat"
            testTarget="tests"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates a Grid Portlets JAR library archive configured for Tomcat   -->
    <!-- =================================================================== -->
    <target name="tests-jar" depends="compile-tests" description="Creates gridportlets tests JAR">
        <echo>Creating gridportlets tests JAR for Tomcat</echo>

        <mkdir dir="${build.classes}/${project.name}"/>

        <copy file="config/test.properties"
            tofile="${build.classes}/${project.name}/test.properties"/>

        <jar jarfile="${build.lib}/${project.name}-test.jar" basedir="${build.classes}" >
            <include name="tests"/>
            <include name="**/*Test.class"/>
            <include name="${project.name}/**"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles JUnit tests                                                -->
    <!-- =================================================================== -->
    <target name="compile-tests" depends="compile" description="Compiles all JUnit tests">
        <echo>Compiling JUnit Tests</echo>
        <javac srcdir="tests"
            destdir="${build.classes}"
            classpathref="classpath"
            debug="${debug}"
            optimize="${optimize}"
            deprecation="${deprecation}">
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Configures the Grid Portlets test database                          -->
    <!-- =================================================================== -->
    <target name="configure-test-database">
            <mkdir dir="${project.webapp}/WEB-INF/persistence"/>
            <copy overwrite="true" file="webapp/WEB-INF/persistence/hibernate.properties" todir="${project.webapp}/WEB-INF/"/>
            <replace file="${project.webapp}/WEB-INF/persistence/hibernate.properties"
                token="@GRIDPORTLETS_WEBAPP@"
                value="${project.webapp}-test"/>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the Grid Portlets test database                             -->
    <!-- =================================================================== -->
    <target name="create-test-database" depends="configure-test-database">
        <taskdef name="schemaexport"
            classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask"
            classpathref="classpath"/>

        <schemaexport
            properties="${project.webapp}/WEB-INF/persistence/hibernate.properties"
            quiet="yes"
            text="no"
            drop="no"
            delimiter=";"
            output="schema-export.sql">
            <fileset dir="webapp/WEB-INF/persistence/">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemaexport>
    </target>

    <!-- ==================================================================== -->
    <!-- Start Tomcat                                                         -->
    <!-- ==================================================================== -->
    <target name="start-tomcat">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${env.CATALINA_HOME}"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
            <arg value="start"/>
            <classpath>
                <pathelement path="${java.home}/../lib/tools.jar"/>
                <fileset dir="${env.CATALINA_HOME}">
                    <include name="bin/bootstrap.jar"/>
                </fileset>
            </classpath>
        </java>

    </target>

    <!-- =================================================================== -->
    <!-- Stop Tomcat                                                         -->
    <!-- =================================================================== -->
    <target name="stop-tomcat">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${env.CATALINA_HOME}"/>
            <arg value="stop"/>
            <classpath>
                <fileset dir="${env.CATALINA_HOME}">
                    <include name="bin/bootstrap.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <!-- =================================================================== -->
    <!-- Run the client JUnit test cases                                     -->
    <!-- =================================================================== -->
    <target name="tests">

        <mkdir dir="build/reports"/>

        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes">
            <sysproperty key="cactus.contextURL" value="http://localhost:${8080}/gridsphere"/>
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${gridsphere.webapp}"/>
                <pathelement location="${project.webapp}"/>
            </classpath>
            <test name="org.gridlab.gridsphere.GridPortletsTest" todir="build/reports">
                <formatter type="xml"/>
            </test>
        </junit>

    </target>

    <!-- =================================================================== -->
    <!-- Creates HTML reports from the test results                          -->
    <!-- =================================================================== -->
    <target name="test-reports" description="Create test reports from Junit results">
        <echo message="Making GridPortlets Junit Test Reports"/>
        <mkdir dir="${project.build}/reports/html"/>
        <junitreport todir="${project.build}/reports">
            <fileset dir="${project.build}/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="noframes" todir="${project.build}/reports/html" styledir="${env.ANT_HOME}/etc" />
        </junitreport>
        <ant antfile="../../build.xml" target="test-reports"/>
    </target>

    <!-- =================================================================== -->
    <!-- Mail the HTML reports of  the test results                          -->
    <!-- =================================================================== -->
    <target name="mail">
        <mail
            mailhost="${mail.junit.mailhost}"
            from="${mail.junit.from}"
            tolist="${mail.junit.tolist}"
            subject="GridPortlets JUnit Test Results">
            <message mimetype="text/html" src="${project.build}/reports/html/junit-noframes.html"/>
            <fileset dir="${project.build}/reports">
                <include name="TESTS-*.xml"/>
            </fileset>
        </mail>
    </target>

</project>
